// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#ifndef PROTOBUF_test_2eproto__INCLUDED
#define PROTOBUF_test_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_test_2eproto();
void protobuf_AssignDesc_test_2eproto();
void protobuf_ShutdownFile_test_2eproto();

class Literal5;
class Literal7;
class Literal9;
class OneOrMore3;
class Optional2;
class Optional4;
class Or6;
class RESet11;
class Root;
class RootHelper;
class Star10;
class Then1;
class Then8;

enum Literal5_Literal {
  Literal5_Literal_L31 = 49
};
bool Literal5_Literal_IsValid(int value);
const Literal5_Literal Literal5_Literal_Literal_MIN = Literal5_Literal_L31;
const Literal5_Literal Literal5_Literal_Literal_MAX = Literal5_Literal_L31;
const int Literal5_Literal_Literal_ARRAYSIZE = Literal5_Literal_Literal_MAX + 1;

const ::google::protobuf::EnumDescriptor* Literal5_Literal_descriptor();
inline const ::std::string& Literal5_Literal_Name(Literal5_Literal value) {
  return ::google::protobuf::internal::NameOfEnum(
    Literal5_Literal_descriptor(), value);
}
inline bool Literal5_Literal_Parse(
    const ::std::string& name, Literal5_Literal* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Literal5_Literal>(
    Literal5_Literal_descriptor(), name, value);
}
enum Literal7_Literal {
  Literal7_Literal_L30 = 48
};
bool Literal7_Literal_IsValid(int value);
const Literal7_Literal Literal7_Literal_Literal_MIN = Literal7_Literal_L30;
const Literal7_Literal Literal7_Literal_Literal_MAX = Literal7_Literal_L30;
const int Literal7_Literal_Literal_ARRAYSIZE = Literal7_Literal_Literal_MAX + 1;

const ::google::protobuf::EnumDescriptor* Literal7_Literal_descriptor();
inline const ::std::string& Literal7_Literal_Name(Literal7_Literal value) {
  return ::google::protobuf::internal::NameOfEnum(
    Literal7_Literal_descriptor(), value);
}
inline bool Literal7_Literal_Parse(
    const ::std::string& name, Literal7_Literal* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Literal7_Literal>(
    Literal7_Literal_descriptor(), name, value);
}
enum Literal9_Literal {
  Literal9_Literal_L30 = 48
};
bool Literal9_Literal_IsValid(int value);
const Literal9_Literal Literal9_Literal_Literal_MIN = Literal9_Literal_L30;
const Literal9_Literal Literal9_Literal_Literal_MAX = Literal9_Literal_L30;
const int Literal9_Literal_Literal_ARRAYSIZE = Literal9_Literal_Literal_MAX + 1;

const ::google::protobuf::EnumDescriptor* Literal9_Literal_descriptor();
inline const ::std::string& Literal9_Literal_Name(Literal9_Literal value) {
  return ::google::protobuf::internal::NameOfEnum(
    Literal9_Literal_descriptor(), value);
}
inline bool Literal9_Literal_Parse(
    const ::std::string& name, Literal9_Literal* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Literal9_Literal>(
    Literal9_Literal_descriptor(), name, value);
}
enum RESet11_Set {
  RESet11_Set_L30 = 48,
  RESet11_Set_L31 = 49
};
bool RESet11_Set_IsValid(int value);
const RESet11_Set RESet11_Set_Set_MIN = RESet11_Set_L30;
const RESet11_Set RESet11_Set_Set_MAX = RESet11_Set_L31;
const int RESet11_Set_Set_ARRAYSIZE = RESet11_Set_Set_MAX + 1;

const ::google::protobuf::EnumDescriptor* RESet11_Set_descriptor();
inline const ::std::string& RESet11_Set_Name(RESet11_Set value) {
  return ::google::protobuf::internal::NameOfEnum(
    RESet11_Set_descriptor(), value);
}
inline bool RESet11_Set_Parse(
    const ::std::string& name, RESet11_Set* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RESet11_Set>(
    RESet11_Set_descriptor(), name, value);
}
// ===================================================================

class Literal5 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Literal5) */ {
 public:
  Literal5();
  virtual ~Literal5();

  Literal5(const Literal5& from);

  inline Literal5& operator=(const Literal5& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Literal5& default_instance();

  void Swap(Literal5* other);

  // implements Message ----------------------------------------------

  inline Literal5* New() const { return New(NULL); }

  Literal5* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Literal5& from);
  void MergeFrom(const Literal5& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Literal5* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Literal5_Literal Literal;
  static const Literal L31 =
    Literal5_Literal_L31;
  static inline bool Literal_IsValid(int value) {
    return Literal5_Literal_IsValid(value);
  }
  static const Literal Literal_MIN =
    Literal5_Literal_Literal_MIN;
  static const Literal Literal_MAX =
    Literal5_Literal_Literal_MAX;
  static const int Literal_ARRAYSIZE =
    Literal5_Literal_Literal_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Literal_descriptor() {
    return Literal5_Literal_descriptor();
  }
  static inline const ::std::string& Literal_Name(Literal value) {
    return Literal5_Literal_Name(value);
  }
  static inline bool Literal_Parse(const ::std::string& name,
      Literal* value) {
    return Literal5_Literal_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .Literal5.Literal literal = 1;
  bool has_literal() const;
  void clear_literal();
  static const int kLiteralFieldNumber = 1;
  ::Literal5_Literal literal() const;
  void set_literal(::Literal5_Literal value);

  // @@protoc_insertion_point(class_scope:Literal5)
 private:
  inline void set_has_literal();
  inline void clear_has_literal();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int literal_;
  friend void  protobuf_AddDesc_test_2eproto();
  friend void protobuf_AssignDesc_test_2eproto();
  friend void protobuf_ShutdownFile_test_2eproto();

  void InitAsDefaultInstance();
  static Literal5* default_instance_;
};
// -------------------------------------------------------------------

class Optional4 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Optional4) */ {
 public:
  Optional4();
  virtual ~Optional4();

  Optional4(const Optional4& from);

  inline Optional4& operator=(const Optional4& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Optional4& default_instance();

  void Swap(Optional4* other);

  // implements Message ----------------------------------------------

  inline Optional4* New() const { return New(NULL); }

  Optional4* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Optional4& from);
  void MergeFrom(const Optional4& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Optional4* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Literal5 child = 1;
  bool has_child() const;
  void clear_child();
  static const int kChildFieldNumber = 1;
  const ::Literal5& child() const;
  ::Literal5* mutable_child();
  ::Literal5* release_child();
  void set_allocated_child(::Literal5* child);

  // @@protoc_insertion_point(class_scope:Optional4)
 private:
  inline void set_has_child();
  inline void clear_has_child();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Literal5* child_;
  friend void  protobuf_AddDesc_test_2eproto();
  friend void protobuf_AssignDesc_test_2eproto();
  friend void protobuf_ShutdownFile_test_2eproto();

  void InitAsDefaultInstance();
  static Optional4* default_instance_;
};
// -------------------------------------------------------------------

class OneOrMore3 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OneOrMore3) */ {
 public:
  OneOrMore3();
  virtual ~OneOrMore3();

  OneOrMore3(const OneOrMore3& from);

  inline OneOrMore3& operator=(const OneOrMore3& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneOrMore3& default_instance();

  void Swap(OneOrMore3* other);

  // implements Message ----------------------------------------------

  inline OneOrMore3* New() const { return New(NULL); }

  OneOrMore3* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneOrMore3& from);
  void MergeFrom(const OneOrMore3& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OneOrMore3* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Optional4 one = 1;
  bool has_one() const;
  void clear_one();
  static const int kOneFieldNumber = 1;
  const ::Optional4& one() const;
  ::Optional4* mutable_one();
  ::Optional4* release_one();
  void set_allocated_one(::Optional4* one);

  // required .Optional4 more = 2;
  bool has_more() const;
  void clear_more();
  static const int kMoreFieldNumber = 2;
  const ::Optional4& more() const;
  ::Optional4* mutable_more();
  ::Optional4* release_more();
  void set_allocated_more(::Optional4* more);

  // @@protoc_insertion_point(class_scope:OneOrMore3)
 private:
  inline void set_has_one();
  inline void clear_has_one();
  inline void set_has_more();
  inline void clear_has_more();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Optional4* one_;
  ::Optional4* more_;
  friend void  protobuf_AddDesc_test_2eproto();
  friend void protobuf_AssignDesc_test_2eproto();
  friend void protobuf_ShutdownFile_test_2eproto();

  void InitAsDefaultInstance();
  static OneOrMore3* default_instance_;
};
// -------------------------------------------------------------------

class Optional2 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Optional2) */ {
 public:
  Optional2();
  virtual ~Optional2();

  Optional2(const Optional2& from);

  inline Optional2& operator=(const Optional2& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Optional2& default_instance();

  void Swap(Optional2* other);

  // implements Message ----------------------------------------------

  inline Optional2* New() const { return New(NULL); }

  Optional2* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Optional2& from);
  void MergeFrom(const Optional2& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Optional2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .OneOrMore3 child = 1;
  bool has_child() const;
  void clear_child();
  static const int kChildFieldNumber = 1;
  const ::OneOrMore3& child() const;
  ::OneOrMore3* mutable_child();
  ::OneOrMore3* release_child();
  void set_allocated_child(::OneOrMore3* child);

  // @@protoc_insertion_point(class_scope:Optional2)
 private:
  inline void set_has_child();
  inline void clear_has_child();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::OneOrMore3* child_;
  friend void  protobuf_AddDesc_test_2eproto();
  friend void protobuf_AssignDesc_test_2eproto();
  friend void protobuf_ShutdownFile_test_2eproto();

  void InitAsDefaultInstance();
  static Optional2* default_instance_;
};
// -------------------------------------------------------------------

class Literal7 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Literal7) */ {
 public:
  Literal7();
  virtual ~Literal7();

  Literal7(const Literal7& from);

  inline Literal7& operator=(const Literal7& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Literal7& default_instance();

  void Swap(Literal7* other);

  // implements Message ----------------------------------------------

  inline Literal7* New() const { return New(NULL); }

  Literal7* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Literal7& from);
  void MergeFrom(const Literal7& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Literal7* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Literal7_Literal Literal;
  static const Literal L30 =
    Literal7_Literal_L30;
  static inline bool Literal_IsValid(int value) {
    return Literal7_Literal_IsValid(value);
  }
  static const Literal Literal_MIN =
    Literal7_Literal_Literal_MIN;
  static const Literal Literal_MAX =
    Literal7_Literal_Literal_MAX;
  static const int Literal_ARRAYSIZE =
    Literal7_Literal_Literal_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Literal_descriptor() {
    return Literal7_Literal_descriptor();
  }
  static inline const ::std::string& Literal_Name(Literal value) {
    return Literal7_Literal_Name(value);
  }
  static inline bool Literal_Parse(const ::std::string& name,
      Literal* value) {
    return Literal7_Literal_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .Literal7.Literal literal = 1;
  bool has_literal() const;
  void clear_literal();
  static const int kLiteralFieldNumber = 1;
  ::Literal7_Literal literal() const;
  void set_literal(::Literal7_Literal value);

  // @@protoc_insertion_point(class_scope:Literal7)
 private:
  inline void set_has_literal();
  inline void clear_has_literal();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int literal_;
  friend void  protobuf_AddDesc_test_2eproto();
  friend void protobuf_AssignDesc_test_2eproto();
  friend void protobuf_ShutdownFile_test_2eproto();

  void InitAsDefaultInstance();
  static Literal7* default_instance_;
};
// -------------------------------------------------------------------

class Literal9 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Literal9) */ {
 public:
  Literal9();
  virtual ~Literal9();

  Literal9(const Literal9& from);

  inline Literal9& operator=(const Literal9& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Literal9& default_instance();

  void Swap(Literal9* other);

  // implements Message ----------------------------------------------

  inline Literal9* New() const { return New(NULL); }

  Literal9* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Literal9& from);
  void MergeFrom(const Literal9& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Literal9* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Literal9_Literal Literal;
  static const Literal L30 =
    Literal9_Literal_L30;
  static inline bool Literal_IsValid(int value) {
    return Literal9_Literal_IsValid(value);
  }
  static const Literal Literal_MIN =
    Literal9_Literal_Literal_MIN;
  static const Literal Literal_MAX =
    Literal9_Literal_Literal_MAX;
  static const int Literal_ARRAYSIZE =
    Literal9_Literal_Literal_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Literal_descriptor() {
    return Literal9_Literal_descriptor();
  }
  static inline const ::std::string& Literal_Name(Literal value) {
    return Literal9_Literal_Name(value);
  }
  static inline bool Literal_Parse(const ::std::string& name,
      Literal* value) {
    return Literal9_Literal_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .Literal9.Literal literal = 1;
  bool has_literal() const;
  void clear_literal();
  static const int kLiteralFieldNumber = 1;
  ::Literal9_Literal literal() const;
  void set_literal(::Literal9_Literal value);

  // @@protoc_insertion_point(class_scope:Literal9)
 private:
  inline void set_has_literal();
  inline void clear_has_literal();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int literal_;
  friend void  protobuf_AddDesc_test_2eproto();
  friend void protobuf_AssignDesc_test_2eproto();
  friend void protobuf_ShutdownFile_test_2eproto();

  void InitAsDefaultInstance();
  static Literal9* default_instance_;
};
// -------------------------------------------------------------------

class RESet11 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RESet11) */ {
 public:
  RESet11();
  virtual ~RESet11();

  RESet11(const RESet11& from);

  inline RESet11& operator=(const RESet11& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RESet11& default_instance();

  void Swap(RESet11* other);

  // implements Message ----------------------------------------------

  inline RESet11* New() const { return New(NULL); }

  RESet11* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RESet11& from);
  void MergeFrom(const RESet11& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RESet11* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef RESet11_Set Set;
  static const Set L30 =
    RESet11_Set_L30;
  static const Set L31 =
    RESet11_Set_L31;
  static inline bool Set_IsValid(int value) {
    return RESet11_Set_IsValid(value);
  }
  static const Set Set_MIN =
    RESet11_Set_Set_MIN;
  static const Set Set_MAX =
    RESet11_Set_Set_MAX;
  static const int Set_ARRAYSIZE =
    RESet11_Set_Set_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Set_descriptor() {
    return RESet11_Set_descriptor();
  }
  static inline const ::std::string& Set_Name(Set value) {
    return RESet11_Set_Name(value);
  }
  static inline bool Set_Parse(const ::std::string& name,
      Set* value) {
    return RESet11_Set_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .RESet11.Set set = 1;
  bool has_set() const;
  void clear_set();
  static const int kSetFieldNumber = 1;
  ::RESet11_Set set() const;
  void set_set(::RESet11_Set value);

  // @@protoc_insertion_point(class_scope:RESet11)
 private:
  inline void set_has_set();
  inline void clear_has_set();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int set_;
  friend void  protobuf_AddDesc_test_2eproto();
  friend void protobuf_AssignDesc_test_2eproto();
  friend void protobuf_ShutdownFile_test_2eproto();

  void InitAsDefaultInstance();
  static RESet11* default_instance_;
};
// -------------------------------------------------------------------

class Star10 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Star10) */ {
 public:
  Star10();
  virtual ~Star10();

  Star10(const Star10& from);

  inline Star10& operator=(const Star10& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Star10& default_instance();

  void Swap(Star10* other);

  // implements Message ----------------------------------------------

  inline Star10* New() const { return New(NULL); }

  Star10* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Star10& from);
  void MergeFrom(const Star10& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Star10* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .RESet11 child = 1;
  int child_size() const;
  void clear_child();
  static const int kChildFieldNumber = 1;
  const ::RESet11& child(int index) const;
  ::RESet11* mutable_child(int index);
  ::RESet11* add_child();
  ::google::protobuf::RepeatedPtrField< ::RESet11 >*
      mutable_child();
  const ::google::protobuf::RepeatedPtrField< ::RESet11 >&
      child() const;

  // @@protoc_insertion_point(class_scope:Star10)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::RESet11 > child_;
  friend void  protobuf_AddDesc_test_2eproto();
  friend void protobuf_AssignDesc_test_2eproto();
  friend void protobuf_ShutdownFile_test_2eproto();

  void InitAsDefaultInstance();
  static Star10* default_instance_;
};
// -------------------------------------------------------------------

class Then8 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Then8) */ {
 public:
  Then8();
  virtual ~Then8();

  Then8(const Then8& from);

  inline Then8& operator=(const Then8& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Then8& default_instance();

  void Swap(Then8* other);

  // implements Message ----------------------------------------------

  inline Then8* New() const { return New(NULL); }

  Then8* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Then8& from);
  void MergeFrom(const Then8& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Then8* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Literal9 literal9 = 1;
  bool has_literal9() const;
  void clear_literal9();
  static const int kLiteral9FieldNumber = 1;
  const ::Literal9& literal9() const;
  ::Literal9* mutable_literal9();
  ::Literal9* release_literal9();
  void set_allocated_literal9(::Literal9* literal9);

  // required .Star10 star10 = 2;
  bool has_star10() const;
  void clear_star10();
  static const int kStar10FieldNumber = 2;
  const ::Star10& star10() const;
  ::Star10* mutable_star10();
  ::Star10* release_star10();
  void set_allocated_star10(::Star10* star10);

  // @@protoc_insertion_point(class_scope:Then8)
 private:
  inline void set_has_literal9();
  inline void clear_has_literal9();
  inline void set_has_star10();
  inline void clear_has_star10();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Literal9* literal9_;
  ::Star10* star10_;
  friend void  protobuf_AddDesc_test_2eproto();
  friend void protobuf_AssignDesc_test_2eproto();
  friend void protobuf_ShutdownFile_test_2eproto();

  void InitAsDefaultInstance();
  static Then8* default_instance_;
};
// -------------------------------------------------------------------

class Or6 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Or6) */ {
 public:
  Or6();
  virtual ~Or6();

  Or6(const Or6& from);

  inline Or6& operator=(const Or6& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Or6& default_instance();

  enum TCase {
    kLiteral7 = 1,
    kThen8 = 2,
    T_NOT_SET = 0,
  };

  void Swap(Or6* other);

  // implements Message ----------------------------------------------

  inline Or6* New() const { return New(NULL); }

  Or6* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Or6& from);
  void MergeFrom(const Or6& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Or6* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Literal7 literal7 = 1;
  bool has_literal7() const;
  void clear_literal7();
  static const int kLiteral7FieldNumber = 1;
  const ::Literal7& literal7() const;
  ::Literal7* mutable_literal7();
  ::Literal7* release_literal7();
  void set_allocated_literal7(::Literal7* literal7);

  // optional .Then8 then8 = 2;
  bool has_then8() const;
  void clear_then8();
  static const int kThen8FieldNumber = 2;
  const ::Then8& then8() const;
  ::Then8* mutable_then8();
  ::Then8* release_then8();
  void set_allocated_then8(::Then8* then8);

  TCase T_case() const;
  // @@protoc_insertion_point(class_scope:Or6)
 private:
  inline void set_has_literal7();
  inline void set_has_then8();

  inline bool has_T() const;
  void clear_T();
  inline void clear_has_T();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  union TUnion {
    TUnion() {}
    ::Literal7* literal7_;
    ::Then8* then8_;
  } T_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_test_2eproto();
  friend void protobuf_AssignDesc_test_2eproto();
  friend void protobuf_ShutdownFile_test_2eproto();

  void InitAsDefaultInstance();
  static Or6* default_instance_;
};
// -------------------------------------------------------------------

class Then1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Then1) */ {
 public:
  Then1();
  virtual ~Then1();

  Then1(const Then1& from);

  inline Then1& operator=(const Then1& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Then1& default_instance();

  void Swap(Then1* other);

  // implements Message ----------------------------------------------

  inline Then1* New() const { return New(NULL); }

  Then1* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Then1& from);
  void MergeFrom(const Then1& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Then1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Optional2 optional2 = 1;
  bool has_optional2() const;
  void clear_optional2();
  static const int kOptional2FieldNumber = 1;
  const ::Optional2& optional2() const;
  ::Optional2* mutable_optional2();
  ::Optional2* release_optional2();
  void set_allocated_optional2(::Optional2* optional2);

  // required .Or6 or6 = 2;
  bool has_or6() const;
  void clear_or6();
  static const int kOr6FieldNumber = 2;
  const ::Or6& or6() const;
  ::Or6* mutable_or6();
  ::Or6* release_or6();
  void set_allocated_or6(::Or6* or6);

  // @@protoc_insertion_point(class_scope:Then1)
 private:
  inline void set_has_optional2();
  inline void clear_has_optional2();
  inline void set_has_or6();
  inline void clear_has_or6();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Optional2* optional2_;
  ::Or6* or6_;
  friend void  protobuf_AddDesc_test_2eproto();
  friend void protobuf_AssignDesc_test_2eproto();
  friend void protobuf_ShutdownFile_test_2eproto();

  void InitAsDefaultInstance();
  static Then1* default_instance_;
};
// -------------------------------------------------------------------

class RootHelper : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RootHelper) */ {
 public:
  RootHelper();
  virtual ~RootHelper();

  RootHelper(const RootHelper& from);

  inline RootHelper& operator=(const RootHelper& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RootHelper& default_instance();

  enum TCase {
    kThen1 = 1,
    T_NOT_SET = 0,
  };

  void Swap(RootHelper* other);

  // implements Message ----------------------------------------------

  inline RootHelper* New() const { return New(NULL); }

  RootHelper* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RootHelper& from);
  void MergeFrom(const RootHelper& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RootHelper* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Then1 then1 = 1;
  bool has_then1() const;
  void clear_then1();
  static const int kThen1FieldNumber = 1;
  const ::Then1& then1() const;
  ::Then1* mutable_then1();
  ::Then1* release_then1();
  void set_allocated_then1(::Then1* then1);

  TCase T_case() const;
  // @@protoc_insertion_point(class_scope:RootHelper)
 private:
  inline void set_has_then1();

  inline bool has_T() const;
  void clear_T();
  inline void clear_has_T();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  union TUnion {
    TUnion() {}
    ::Then1* then1_;
  } T_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_test_2eproto();
  friend void protobuf_AssignDesc_test_2eproto();
  friend void protobuf_ShutdownFile_test_2eproto();

  void InitAsDefaultInstance();
  static RootHelper* default_instance_;
};
// -------------------------------------------------------------------

class Root : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Root) */ {
 public:
  Root();
  virtual ~Root();

  Root(const Root& from);

  inline Root& operator=(const Root& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Root& default_instance();

  void Swap(Root* other);

  // implements Message ----------------------------------------------

  inline Root* New() const { return New(NULL); }

  Root* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Root& from);
  void MergeFrom(const Root& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Root* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .RootHelper rh = 1;
  int rh_size() const;
  void clear_rh();
  static const int kRhFieldNumber = 1;
  const ::RootHelper& rh(int index) const;
  ::RootHelper* mutable_rh(int index);
  ::RootHelper* add_rh();
  ::google::protobuf::RepeatedPtrField< ::RootHelper >*
      mutable_rh();
  const ::google::protobuf::RepeatedPtrField< ::RootHelper >&
      rh() const;

  // @@protoc_insertion_point(class_scope:Root)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::RootHelper > rh_;
  friend void  protobuf_AddDesc_test_2eproto();
  friend void protobuf_AssignDesc_test_2eproto();
  friend void protobuf_ShutdownFile_test_2eproto();

  void InitAsDefaultInstance();
  static Root* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Literal5

// required .Literal5.Literal literal = 1;
inline bool Literal5::has_literal() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Literal5::set_has_literal() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Literal5::clear_has_literal() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Literal5::clear_literal() {
  literal_ = 49;
  clear_has_literal();
}
inline ::Literal5_Literal Literal5::literal() const {
  // @@protoc_insertion_point(field_get:Literal5.literal)
  return static_cast< ::Literal5_Literal >(literal_);
}
inline void Literal5::set_literal(::Literal5_Literal value) {
  assert(::Literal5_Literal_IsValid(value));
  set_has_literal();
  literal_ = value;
  // @@protoc_insertion_point(field_set:Literal5.literal)
}

// -------------------------------------------------------------------

// Optional4

// optional .Literal5 child = 1;
inline bool Optional4::has_child() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Optional4::set_has_child() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Optional4::clear_has_child() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Optional4::clear_child() {
  if (child_ != NULL) child_->::Literal5::Clear();
  clear_has_child();
}
inline const ::Literal5& Optional4::child() const {
  // @@protoc_insertion_point(field_get:Optional4.child)
  return child_ != NULL ? *child_ : *default_instance_->child_;
}
inline ::Literal5* Optional4::mutable_child() {
  set_has_child();
  if (child_ == NULL) {
    child_ = new ::Literal5;
  }
  // @@protoc_insertion_point(field_mutable:Optional4.child)
  return child_;
}
inline ::Literal5* Optional4::release_child() {
  // @@protoc_insertion_point(field_release:Optional4.child)
  clear_has_child();
  ::Literal5* temp = child_;
  child_ = NULL;
  return temp;
}
inline void Optional4::set_allocated_child(::Literal5* child) {
  delete child_;
  child_ = child;
  if (child) {
    set_has_child();
  } else {
    clear_has_child();
  }
  // @@protoc_insertion_point(field_set_allocated:Optional4.child)
}

// -------------------------------------------------------------------

// OneOrMore3

// required .Optional4 one = 1;
inline bool OneOrMore3::has_one() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneOrMore3::set_has_one() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneOrMore3::clear_has_one() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneOrMore3::clear_one() {
  if (one_ != NULL) one_->::Optional4::Clear();
  clear_has_one();
}
inline const ::Optional4& OneOrMore3::one() const {
  // @@protoc_insertion_point(field_get:OneOrMore3.one)
  return one_ != NULL ? *one_ : *default_instance_->one_;
}
inline ::Optional4* OneOrMore3::mutable_one() {
  set_has_one();
  if (one_ == NULL) {
    one_ = new ::Optional4;
  }
  // @@protoc_insertion_point(field_mutable:OneOrMore3.one)
  return one_;
}
inline ::Optional4* OneOrMore3::release_one() {
  // @@protoc_insertion_point(field_release:OneOrMore3.one)
  clear_has_one();
  ::Optional4* temp = one_;
  one_ = NULL;
  return temp;
}
inline void OneOrMore3::set_allocated_one(::Optional4* one) {
  delete one_;
  one_ = one;
  if (one) {
    set_has_one();
  } else {
    clear_has_one();
  }
  // @@protoc_insertion_point(field_set_allocated:OneOrMore3.one)
}

// required .Optional4 more = 2;
inline bool OneOrMore3::has_more() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneOrMore3::set_has_more() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneOrMore3::clear_has_more() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneOrMore3::clear_more() {
  if (more_ != NULL) more_->::Optional4::Clear();
  clear_has_more();
}
inline const ::Optional4& OneOrMore3::more() const {
  // @@protoc_insertion_point(field_get:OneOrMore3.more)
  return more_ != NULL ? *more_ : *default_instance_->more_;
}
inline ::Optional4* OneOrMore3::mutable_more() {
  set_has_more();
  if (more_ == NULL) {
    more_ = new ::Optional4;
  }
  // @@protoc_insertion_point(field_mutable:OneOrMore3.more)
  return more_;
}
inline ::Optional4* OneOrMore3::release_more() {
  // @@protoc_insertion_point(field_release:OneOrMore3.more)
  clear_has_more();
  ::Optional4* temp = more_;
  more_ = NULL;
  return temp;
}
inline void OneOrMore3::set_allocated_more(::Optional4* more) {
  delete more_;
  more_ = more;
  if (more) {
    set_has_more();
  } else {
    clear_has_more();
  }
  // @@protoc_insertion_point(field_set_allocated:OneOrMore3.more)
}

// -------------------------------------------------------------------

// Optional2

// optional .OneOrMore3 child = 1;
inline bool Optional2::has_child() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Optional2::set_has_child() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Optional2::clear_has_child() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Optional2::clear_child() {
  if (child_ != NULL) child_->::OneOrMore3::Clear();
  clear_has_child();
}
inline const ::OneOrMore3& Optional2::child() const {
  // @@protoc_insertion_point(field_get:Optional2.child)
  return child_ != NULL ? *child_ : *default_instance_->child_;
}
inline ::OneOrMore3* Optional2::mutable_child() {
  set_has_child();
  if (child_ == NULL) {
    child_ = new ::OneOrMore3;
  }
  // @@protoc_insertion_point(field_mutable:Optional2.child)
  return child_;
}
inline ::OneOrMore3* Optional2::release_child() {
  // @@protoc_insertion_point(field_release:Optional2.child)
  clear_has_child();
  ::OneOrMore3* temp = child_;
  child_ = NULL;
  return temp;
}
inline void Optional2::set_allocated_child(::OneOrMore3* child) {
  delete child_;
  child_ = child;
  if (child) {
    set_has_child();
  } else {
    clear_has_child();
  }
  // @@protoc_insertion_point(field_set_allocated:Optional2.child)
}

// -------------------------------------------------------------------

// Literal7

// required .Literal7.Literal literal = 1;
inline bool Literal7::has_literal() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Literal7::set_has_literal() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Literal7::clear_has_literal() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Literal7::clear_literal() {
  literal_ = 48;
  clear_has_literal();
}
inline ::Literal7_Literal Literal7::literal() const {
  // @@protoc_insertion_point(field_get:Literal7.literal)
  return static_cast< ::Literal7_Literal >(literal_);
}
inline void Literal7::set_literal(::Literal7_Literal value) {
  assert(::Literal7_Literal_IsValid(value));
  set_has_literal();
  literal_ = value;
  // @@protoc_insertion_point(field_set:Literal7.literal)
}

// -------------------------------------------------------------------

// Literal9

// required .Literal9.Literal literal = 1;
inline bool Literal9::has_literal() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Literal9::set_has_literal() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Literal9::clear_has_literal() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Literal9::clear_literal() {
  literal_ = 48;
  clear_has_literal();
}
inline ::Literal9_Literal Literal9::literal() const {
  // @@protoc_insertion_point(field_get:Literal9.literal)
  return static_cast< ::Literal9_Literal >(literal_);
}
inline void Literal9::set_literal(::Literal9_Literal value) {
  assert(::Literal9_Literal_IsValid(value));
  set_has_literal();
  literal_ = value;
  // @@protoc_insertion_point(field_set:Literal9.literal)
}

// -------------------------------------------------------------------

// RESet11

// required .RESet11.Set set = 1;
inline bool RESet11::has_set() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RESet11::set_has_set() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RESet11::clear_has_set() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RESet11::clear_set() {
  set_ = 48;
  clear_has_set();
}
inline ::RESet11_Set RESet11::set() const {
  // @@protoc_insertion_point(field_get:RESet11.set)
  return static_cast< ::RESet11_Set >(set_);
}
inline void RESet11::set_set(::RESet11_Set value) {
  assert(::RESet11_Set_IsValid(value));
  set_has_set();
  set_ = value;
  // @@protoc_insertion_point(field_set:RESet11.set)
}

// -------------------------------------------------------------------

// Star10

// repeated .RESet11 child = 1;
inline int Star10::child_size() const {
  return child_.size();
}
inline void Star10::clear_child() {
  child_.Clear();
}
inline const ::RESet11& Star10::child(int index) const {
  // @@protoc_insertion_point(field_get:Star10.child)
  return child_.Get(index);
}
inline ::RESet11* Star10::mutable_child(int index) {
  // @@protoc_insertion_point(field_mutable:Star10.child)
  return child_.Mutable(index);
}
inline ::RESet11* Star10::add_child() {
  // @@protoc_insertion_point(field_add:Star10.child)
  return child_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::RESet11 >*
Star10::mutable_child() {
  // @@protoc_insertion_point(field_mutable_list:Star10.child)
  return &child_;
}
inline const ::google::protobuf::RepeatedPtrField< ::RESet11 >&
Star10::child() const {
  // @@protoc_insertion_point(field_list:Star10.child)
  return child_;
}

// -------------------------------------------------------------------

// Then8

// required .Literal9 literal9 = 1;
inline bool Then8::has_literal9() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Then8::set_has_literal9() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Then8::clear_has_literal9() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Then8::clear_literal9() {
  if (literal9_ != NULL) literal9_->::Literal9::Clear();
  clear_has_literal9();
}
inline const ::Literal9& Then8::literal9() const {
  // @@protoc_insertion_point(field_get:Then8.literal9)
  return literal9_ != NULL ? *literal9_ : *default_instance_->literal9_;
}
inline ::Literal9* Then8::mutable_literal9() {
  set_has_literal9();
  if (literal9_ == NULL) {
    literal9_ = new ::Literal9;
  }
  // @@protoc_insertion_point(field_mutable:Then8.literal9)
  return literal9_;
}
inline ::Literal9* Then8::release_literal9() {
  // @@protoc_insertion_point(field_release:Then8.literal9)
  clear_has_literal9();
  ::Literal9* temp = literal9_;
  literal9_ = NULL;
  return temp;
}
inline void Then8::set_allocated_literal9(::Literal9* literal9) {
  delete literal9_;
  literal9_ = literal9;
  if (literal9) {
    set_has_literal9();
  } else {
    clear_has_literal9();
  }
  // @@protoc_insertion_point(field_set_allocated:Then8.literal9)
}

// required .Star10 star10 = 2;
inline bool Then8::has_star10() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Then8::set_has_star10() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Then8::clear_has_star10() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Then8::clear_star10() {
  if (star10_ != NULL) star10_->::Star10::Clear();
  clear_has_star10();
}
inline const ::Star10& Then8::star10() const {
  // @@protoc_insertion_point(field_get:Then8.star10)
  return star10_ != NULL ? *star10_ : *default_instance_->star10_;
}
inline ::Star10* Then8::mutable_star10() {
  set_has_star10();
  if (star10_ == NULL) {
    star10_ = new ::Star10;
  }
  // @@protoc_insertion_point(field_mutable:Then8.star10)
  return star10_;
}
inline ::Star10* Then8::release_star10() {
  // @@protoc_insertion_point(field_release:Then8.star10)
  clear_has_star10();
  ::Star10* temp = star10_;
  star10_ = NULL;
  return temp;
}
inline void Then8::set_allocated_star10(::Star10* star10) {
  delete star10_;
  star10_ = star10;
  if (star10) {
    set_has_star10();
  } else {
    clear_has_star10();
  }
  // @@protoc_insertion_point(field_set_allocated:Then8.star10)
}

// -------------------------------------------------------------------

// Or6

// optional .Literal7 literal7 = 1;
inline bool Or6::has_literal7() const {
  return T_case() == kLiteral7;
}
inline void Or6::set_has_literal7() {
  _oneof_case_[0] = kLiteral7;
}
inline void Or6::clear_literal7() {
  if (has_literal7()) {
    delete T_.literal7_;
    clear_has_T();
  }
}
inline  const ::Literal7& Or6::literal7() const {
  // @@protoc_insertion_point(field_get:Or6.literal7)
  return has_literal7()
      ? *T_.literal7_
      : ::Literal7::default_instance();
}
inline ::Literal7* Or6::mutable_literal7() {
  if (!has_literal7()) {
    clear_T();
    set_has_literal7();
    T_.literal7_ = new ::Literal7;
  }
  // @@protoc_insertion_point(field_mutable:Or6.literal7)
  return T_.literal7_;
}
inline ::Literal7* Or6::release_literal7() {
  // @@protoc_insertion_point(field_release:Or6.literal7)
  if (has_literal7()) {
    clear_has_T();
    ::Literal7* temp = T_.literal7_;
    T_.literal7_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Or6::set_allocated_literal7(::Literal7* literal7) {
  clear_T();
  if (literal7) {
    set_has_literal7();
    T_.literal7_ = literal7;
  }
  // @@protoc_insertion_point(field_set_allocated:Or6.literal7)
}

// optional .Then8 then8 = 2;
inline bool Or6::has_then8() const {
  return T_case() == kThen8;
}
inline void Or6::set_has_then8() {
  _oneof_case_[0] = kThen8;
}
inline void Or6::clear_then8() {
  if (has_then8()) {
    delete T_.then8_;
    clear_has_T();
  }
}
inline  const ::Then8& Or6::then8() const {
  // @@protoc_insertion_point(field_get:Or6.then8)
  return has_then8()
      ? *T_.then8_
      : ::Then8::default_instance();
}
inline ::Then8* Or6::mutable_then8() {
  if (!has_then8()) {
    clear_T();
    set_has_then8();
    T_.then8_ = new ::Then8;
  }
  // @@protoc_insertion_point(field_mutable:Or6.then8)
  return T_.then8_;
}
inline ::Then8* Or6::release_then8() {
  // @@protoc_insertion_point(field_release:Or6.then8)
  if (has_then8()) {
    clear_has_T();
    ::Then8* temp = T_.then8_;
    T_.then8_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Or6::set_allocated_then8(::Then8* then8) {
  clear_T();
  if (then8) {
    set_has_then8();
    T_.then8_ = then8;
  }
  // @@protoc_insertion_point(field_set_allocated:Or6.then8)
}

inline bool Or6::has_T() const {
  return T_case() != T_NOT_SET;
}
inline void Or6::clear_has_T() {
  _oneof_case_[0] = T_NOT_SET;
}
inline Or6::TCase Or6::T_case() const {
  return Or6::TCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Then1

// required .Optional2 optional2 = 1;
inline bool Then1::has_optional2() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Then1::set_has_optional2() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Then1::clear_has_optional2() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Then1::clear_optional2() {
  if (optional2_ != NULL) optional2_->::Optional2::Clear();
  clear_has_optional2();
}
inline const ::Optional2& Then1::optional2() const {
  // @@protoc_insertion_point(field_get:Then1.optional2)
  return optional2_ != NULL ? *optional2_ : *default_instance_->optional2_;
}
inline ::Optional2* Then1::mutable_optional2() {
  set_has_optional2();
  if (optional2_ == NULL) {
    optional2_ = new ::Optional2;
  }
  // @@protoc_insertion_point(field_mutable:Then1.optional2)
  return optional2_;
}
inline ::Optional2* Then1::release_optional2() {
  // @@protoc_insertion_point(field_release:Then1.optional2)
  clear_has_optional2();
  ::Optional2* temp = optional2_;
  optional2_ = NULL;
  return temp;
}
inline void Then1::set_allocated_optional2(::Optional2* optional2) {
  delete optional2_;
  optional2_ = optional2;
  if (optional2) {
    set_has_optional2();
  } else {
    clear_has_optional2();
  }
  // @@protoc_insertion_point(field_set_allocated:Then1.optional2)
}

// required .Or6 or6 = 2;
inline bool Then1::has_or6() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Then1::set_has_or6() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Then1::clear_has_or6() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Then1::clear_or6() {
  if (or6_ != NULL) or6_->::Or6::Clear();
  clear_has_or6();
}
inline const ::Or6& Then1::or6() const {
  // @@protoc_insertion_point(field_get:Then1.or6)
  return or6_ != NULL ? *or6_ : *default_instance_->or6_;
}
inline ::Or6* Then1::mutable_or6() {
  set_has_or6();
  if (or6_ == NULL) {
    or6_ = new ::Or6;
  }
  // @@protoc_insertion_point(field_mutable:Then1.or6)
  return or6_;
}
inline ::Or6* Then1::release_or6() {
  // @@protoc_insertion_point(field_release:Then1.or6)
  clear_has_or6();
  ::Or6* temp = or6_;
  or6_ = NULL;
  return temp;
}
inline void Then1::set_allocated_or6(::Or6* or6) {
  delete or6_;
  or6_ = or6;
  if (or6) {
    set_has_or6();
  } else {
    clear_has_or6();
  }
  // @@protoc_insertion_point(field_set_allocated:Then1.or6)
}

// -------------------------------------------------------------------

// RootHelper

// optional .Then1 then1 = 1;
inline bool RootHelper::has_then1() const {
  return T_case() == kThen1;
}
inline void RootHelper::set_has_then1() {
  _oneof_case_[0] = kThen1;
}
inline void RootHelper::clear_then1() {
  if (has_then1()) {
    delete T_.then1_;
    clear_has_T();
  }
}
inline  const ::Then1& RootHelper::then1() const {
  // @@protoc_insertion_point(field_get:RootHelper.then1)
  return has_then1()
      ? *T_.then1_
      : ::Then1::default_instance();
}
inline ::Then1* RootHelper::mutable_then1() {
  if (!has_then1()) {
    clear_T();
    set_has_then1();
    T_.then1_ = new ::Then1;
  }
  // @@protoc_insertion_point(field_mutable:RootHelper.then1)
  return T_.then1_;
}
inline ::Then1* RootHelper::release_then1() {
  // @@protoc_insertion_point(field_release:RootHelper.then1)
  if (has_then1()) {
    clear_has_T();
    ::Then1* temp = T_.then1_;
    T_.then1_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void RootHelper::set_allocated_then1(::Then1* then1) {
  clear_T();
  if (then1) {
    set_has_then1();
    T_.then1_ = then1;
  }
  // @@protoc_insertion_point(field_set_allocated:RootHelper.then1)
}

inline bool RootHelper::has_T() const {
  return T_case() != T_NOT_SET;
}
inline void RootHelper::clear_has_T() {
  _oneof_case_[0] = T_NOT_SET;
}
inline RootHelper::TCase RootHelper::T_case() const {
  return RootHelper::TCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Root

// repeated .RootHelper rh = 1;
inline int Root::rh_size() const {
  return rh_.size();
}
inline void Root::clear_rh() {
  rh_.Clear();
}
inline const ::RootHelper& Root::rh(int index) const {
  // @@protoc_insertion_point(field_get:Root.rh)
  return rh_.Get(index);
}
inline ::RootHelper* Root::mutable_rh(int index) {
  // @@protoc_insertion_point(field_mutable:Root.rh)
  return rh_.Mutable(index);
}
inline ::RootHelper* Root::add_rh() {
  // @@protoc_insertion_point(field_add:Root.rh)
  return rh_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::RootHelper >*
Root::mutable_rh() {
  // @@protoc_insertion_point(field_mutable_list:Root.rh)
  return &rh_;
}
inline const ::google::protobuf::RepeatedPtrField< ::RootHelper >&
Root::rh() const {
  // @@protoc_insertion_point(field_list:Root.rh)
  return rh_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Literal5_Literal> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Literal5_Literal>() {
  return ::Literal5_Literal_descriptor();
}
template <> struct is_proto_enum< ::Literal7_Literal> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Literal7_Literal>() {
  return ::Literal7_Literal_descriptor();
}
template <> struct is_proto_enum< ::Literal9_Literal> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Literal9_Literal>() {
  return ::Literal9_Literal_descriptor();
}
template <> struct is_proto_enum< ::RESet11_Set> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::RESet11_Set>() {
  return ::RESet11_Set_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_test_2eproto__INCLUDED
