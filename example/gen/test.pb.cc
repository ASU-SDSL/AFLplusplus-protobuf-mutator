// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "test.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Literal5_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Literal5_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Literal5_Literal_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Optional4_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Optional4_reflection_ = NULL;
const ::google::protobuf::Descriptor* OneOrMore3_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OneOrMore3_reflection_ = NULL;
const ::google::protobuf::Descriptor* Optional2_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Optional2_reflection_ = NULL;
const ::google::protobuf::Descriptor* Literal7_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Literal7_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Literal7_Literal_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Literal9_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Literal9_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Literal9_Literal_descriptor_ = NULL;
const ::google::protobuf::Descriptor* RESet11_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RESet11_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* RESet11_Set_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Star10_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Star10_reflection_ = NULL;
const ::google::protobuf::Descriptor* Then8_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Then8_reflection_ = NULL;
const ::google::protobuf::Descriptor* Or6_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Or6_reflection_ = NULL;
struct Or6OneofInstance {
  const ::Literal7* literal7_;
  const ::Then8* then8_;
}* Or6_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* Then1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Then1_reflection_ = NULL;
const ::google::protobuf::Descriptor* RootHelper_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RootHelper_reflection_ = NULL;
struct RootHelperOneofInstance {
  const ::Then1* then1_;
}* RootHelper_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* Root_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Root_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_test_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_test_2eproto() {
  protobuf_AddDesc_test_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "test.proto");
  GOOGLE_CHECK(file != NULL);
  Literal5_descriptor_ = file->message_type(0);
  static const int Literal5_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Literal5, literal_),
  };
  Literal5_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Literal5_descriptor_,
      Literal5::default_instance_,
      Literal5_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Literal5, _has_bits_[0]),
      -1,
      -1,
      sizeof(Literal5),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Literal5, _internal_metadata_),
      -1);
  Literal5_Literal_descriptor_ = Literal5_descriptor_->enum_type(0);
  Optional4_descriptor_ = file->message_type(1);
  static const int Optional4_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Optional4, child_),
  };
  Optional4_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Optional4_descriptor_,
      Optional4::default_instance_,
      Optional4_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Optional4, _has_bits_[0]),
      -1,
      -1,
      sizeof(Optional4),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Optional4, _internal_metadata_),
      -1);
  OneOrMore3_descriptor_ = file->message_type(2);
  static const int OneOrMore3_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneOrMore3, one_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneOrMore3, more_),
  };
  OneOrMore3_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OneOrMore3_descriptor_,
      OneOrMore3::default_instance_,
      OneOrMore3_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneOrMore3, _has_bits_[0]),
      -1,
      -1,
      sizeof(OneOrMore3),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneOrMore3, _internal_metadata_),
      -1);
  Optional2_descriptor_ = file->message_type(3);
  static const int Optional2_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Optional2, child_),
  };
  Optional2_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Optional2_descriptor_,
      Optional2::default_instance_,
      Optional2_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Optional2, _has_bits_[0]),
      -1,
      -1,
      sizeof(Optional2),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Optional2, _internal_metadata_),
      -1);
  Literal7_descriptor_ = file->message_type(4);
  static const int Literal7_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Literal7, literal_),
  };
  Literal7_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Literal7_descriptor_,
      Literal7::default_instance_,
      Literal7_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Literal7, _has_bits_[0]),
      -1,
      -1,
      sizeof(Literal7),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Literal7, _internal_metadata_),
      -1);
  Literal7_Literal_descriptor_ = Literal7_descriptor_->enum_type(0);
  Literal9_descriptor_ = file->message_type(5);
  static const int Literal9_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Literal9, literal_),
  };
  Literal9_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Literal9_descriptor_,
      Literal9::default_instance_,
      Literal9_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Literal9, _has_bits_[0]),
      -1,
      -1,
      sizeof(Literal9),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Literal9, _internal_metadata_),
      -1);
  Literal9_Literal_descriptor_ = Literal9_descriptor_->enum_type(0);
  RESet11_descriptor_ = file->message_type(6);
  static const int RESet11_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RESet11, set_),
  };
  RESet11_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RESet11_descriptor_,
      RESet11::default_instance_,
      RESet11_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RESet11, _has_bits_[0]),
      -1,
      -1,
      sizeof(RESet11),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RESet11, _internal_metadata_),
      -1);
  RESet11_Set_descriptor_ = RESet11_descriptor_->enum_type(0);
  Star10_descriptor_ = file->message_type(7);
  static const int Star10_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Star10, child_),
  };
  Star10_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Star10_descriptor_,
      Star10::default_instance_,
      Star10_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Star10, _has_bits_[0]),
      -1,
      -1,
      sizeof(Star10),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Star10, _internal_metadata_),
      -1);
  Then8_descriptor_ = file->message_type(8);
  static const int Then8_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Then8, literal9_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Then8, star10_),
  };
  Then8_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Then8_descriptor_,
      Then8::default_instance_,
      Then8_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Then8, _has_bits_[0]),
      -1,
      -1,
      sizeof(Then8),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Then8, _internal_metadata_),
      -1);
  Or6_descriptor_ = file->message_type(9);
  static const int Or6_offsets_[3] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Or6_default_oneof_instance_, literal7_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Or6_default_oneof_instance_, then8_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Or6, T_),
  };
  Or6_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Or6_descriptor_,
      Or6::default_instance_,
      Or6_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Or6, _has_bits_[0]),
      -1,
      -1,
      Or6_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Or6, _oneof_case_[0]),
      sizeof(Or6),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Or6, _internal_metadata_),
      -1);
  Then1_descriptor_ = file->message_type(10);
  static const int Then1_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Then1, optional2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Then1, or6_),
  };
  Then1_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Then1_descriptor_,
      Then1::default_instance_,
      Then1_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Then1, _has_bits_[0]),
      -1,
      -1,
      sizeof(Then1),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Then1, _internal_metadata_),
      -1);
  RootHelper_descriptor_ = file->message_type(11);
  static const int RootHelper_offsets_[2] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(RootHelper_default_oneof_instance_, then1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RootHelper, T_),
  };
  RootHelper_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RootHelper_descriptor_,
      RootHelper::default_instance_,
      RootHelper_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RootHelper, _has_bits_[0]),
      -1,
      -1,
      RootHelper_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RootHelper, _oneof_case_[0]),
      sizeof(RootHelper),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RootHelper, _internal_metadata_),
      -1);
  Root_descriptor_ = file->message_type(12);
  static const int Root_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Root, rh_),
  };
  Root_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Root_descriptor_,
      Root::default_instance_,
      Root_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Root, _has_bits_[0]),
      -1,
      -1,
      sizeof(Root),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Root, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_test_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Literal5_descriptor_, &Literal5::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Optional4_descriptor_, &Optional4::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OneOrMore3_descriptor_, &OneOrMore3::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Optional2_descriptor_, &Optional2::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Literal7_descriptor_, &Literal7::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Literal9_descriptor_, &Literal9::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RESet11_descriptor_, &RESet11::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Star10_descriptor_, &Star10::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Then8_descriptor_, &Then8::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Or6_descriptor_, &Or6::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Then1_descriptor_, &Then1::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RootHelper_descriptor_, &RootHelper::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Root_descriptor_, &Root::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_test_2eproto() {
  delete Literal5::default_instance_;
  delete Literal5_reflection_;
  delete Optional4::default_instance_;
  delete Optional4_reflection_;
  delete OneOrMore3::default_instance_;
  delete OneOrMore3_reflection_;
  delete Optional2::default_instance_;
  delete Optional2_reflection_;
  delete Literal7::default_instance_;
  delete Literal7_reflection_;
  delete Literal9::default_instance_;
  delete Literal9_reflection_;
  delete RESet11::default_instance_;
  delete RESet11_reflection_;
  delete Star10::default_instance_;
  delete Star10_reflection_;
  delete Then8::default_instance_;
  delete Then8_reflection_;
  delete Or6::default_instance_;
  delete Or6_default_oneof_instance_;
  delete Or6_reflection_;
  delete Then1::default_instance_;
  delete Then1_reflection_;
  delete RootHelper::default_instance_;
  delete RootHelper_default_oneof_instance_;
  delete RootHelper_reflection_;
  delete Root::default_instance_;
  delete Root_reflection_;
}

void protobuf_AddDesc_test_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_test_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\ntest.proto\"B\n\010Literal5\022\"\n\007literal\030\001 \002("
    "\0162\021.Literal5.Literal\"\022\n\007Literal\022\007\n\003L31\0201"
    "\"%\n\tOptional4\022\030\n\005child\030\001 \001(\0132\t.Literal5\""
    "\?\n\nOneOrMore3\022\027\n\003one\030\001 \002(\0132\n.Optional4\022\030"
    "\n\004more\030\002 \002(\0132\n.Optional4\"\'\n\tOptional2\022\032\n"
    "\005child\030\001 \001(\0132\013.OneOrMore3\"B\n\010Literal7\022\"\n"
    "\007literal\030\001 \002(\0162\021.Literal7.Literal\"\022\n\007Lit"
    "eral\022\007\n\003L30\0200\"B\n\010Literal9\022\"\n\007literal\030\001 \002"
    "(\0162\021.Literal9.Literal\"\022\n\007Literal\022\007\n\003L30\020"
    "0\"=\n\007RESet11\022\031\n\003set\030\001 \002(\0162\014.RESet11.Set\""
    "\027\n\003Set\022\007\n\003L30\0200\022\007\n\003L31\0201\"!\n\006Star10\022\027\n\005ch"
    "ild\030\001 \003(\0132\010.RESet11\"=\n\005Then8\022\033\n\010literal9"
    "\030\001 \002(\0132\t.Literal9\022\027\n\006star10\030\002 \002(\0132\007.Star"
    "10\"B\n\003Or6\022\035\n\010literal7\030\001 \001(\0132\t.Literal7H\000"
    "\022\027\n\005then8\030\002 \001(\0132\006.Then8H\000B\003\n\001T\"9\n\005Then1\022"
    "\035\n\toptional2\030\001 \002(\0132\n.Optional2\022\021\n\003or6\030\002 "
    "\002(\0132\004.Or6\"*\n\nRootHelper\022\027\n\005then1\030\001 \001(\0132\006"
    ".Then1H\000B\003\n\001T\"\037\n\004Root\022\027\n\002rh\030\001 \003(\0132\013.Root"
    "Helper", 726);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "test.proto", &protobuf_RegisterTypes);
  Literal5::default_instance_ = new Literal5();
  Optional4::default_instance_ = new Optional4();
  OneOrMore3::default_instance_ = new OneOrMore3();
  Optional2::default_instance_ = new Optional2();
  Literal7::default_instance_ = new Literal7();
  Literal9::default_instance_ = new Literal9();
  RESet11::default_instance_ = new RESet11();
  Star10::default_instance_ = new Star10();
  Then8::default_instance_ = new Then8();
  Or6::default_instance_ = new Or6();
  Or6_default_oneof_instance_ = new Or6OneofInstance();
  Then1::default_instance_ = new Then1();
  RootHelper::default_instance_ = new RootHelper();
  RootHelper_default_oneof_instance_ = new RootHelperOneofInstance();
  Root::default_instance_ = new Root();
  Literal5::default_instance_->InitAsDefaultInstance();
  Optional4::default_instance_->InitAsDefaultInstance();
  OneOrMore3::default_instance_->InitAsDefaultInstance();
  Optional2::default_instance_->InitAsDefaultInstance();
  Literal7::default_instance_->InitAsDefaultInstance();
  Literal9::default_instance_->InitAsDefaultInstance();
  RESet11::default_instance_->InitAsDefaultInstance();
  Star10::default_instance_->InitAsDefaultInstance();
  Then8::default_instance_->InitAsDefaultInstance();
  Or6::default_instance_->InitAsDefaultInstance();
  Then1::default_instance_->InitAsDefaultInstance();
  RootHelper::default_instance_->InitAsDefaultInstance();
  Root::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_test_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_test_2eproto {
  StaticDescriptorInitializer_test_2eproto() {
    protobuf_AddDesc_test_2eproto();
  }
} static_descriptor_initializer_test_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* Literal5_Literal_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Literal5_Literal_descriptor_;
}
bool Literal5_Literal_IsValid(int value) {
  switch(value) {
    case 49:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Literal5_Literal Literal5::L31;
const Literal5_Literal Literal5::Literal_MIN;
const Literal5_Literal Literal5::Literal_MAX;
const int Literal5::Literal_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Literal5::kLiteralFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Literal5::Literal5()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Literal5)
}

void Literal5::InitAsDefaultInstance() {
}

Literal5::Literal5(const Literal5& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Literal5)
}

void Literal5::SharedCtor() {
  _cached_size_ = 0;
  literal_ = 49;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Literal5::~Literal5() {
  // @@protoc_insertion_point(destructor:Literal5)
  SharedDtor();
}

void Literal5::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Literal5::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Literal5::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Literal5_descriptor_;
}

const Literal5& Literal5::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

Literal5* Literal5::default_instance_ = NULL;

Literal5* Literal5::New(::google::protobuf::Arena* arena) const {
  Literal5* n = new Literal5;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Literal5::Clear() {
// @@protoc_insertion_point(message_clear_start:Literal5)
  literal_ = 49;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Literal5::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Literal5)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Literal5.Literal literal = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Literal5_Literal_IsValid(value)) {
            set_literal(static_cast< ::Literal5_Literal >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Literal5)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Literal5)
  return false;
#undef DO_
}

void Literal5::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Literal5)
  // required .Literal5.Literal literal = 1;
  if (has_literal()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->literal(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Literal5)
}

::google::protobuf::uint8* Literal5::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Literal5)
  // required .Literal5.Literal literal = 1;
  if (has_literal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->literal(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Literal5)
  return target;
}

int Literal5::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Literal5)
  int total_size = 0;

  // required .Literal5.Literal literal = 1;
  if (has_literal()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->literal());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Literal5::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Literal5)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Literal5* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Literal5>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Literal5)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Literal5)
    MergeFrom(*source);
  }
}

void Literal5::MergeFrom(const Literal5& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Literal5)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_literal()) {
      set_literal(from.literal());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Literal5::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Literal5)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Literal5::CopyFrom(const Literal5& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Literal5)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Literal5::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Literal5::Swap(Literal5* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Literal5::InternalSwap(Literal5* other) {
  std::swap(literal_, other->literal_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Literal5::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Literal5_descriptor_;
  metadata.reflection = Literal5_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Literal5

// required .Literal5.Literal literal = 1;
bool Literal5::has_literal() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Literal5::set_has_literal() {
  _has_bits_[0] |= 0x00000001u;
}
void Literal5::clear_has_literal() {
  _has_bits_[0] &= ~0x00000001u;
}
void Literal5::clear_literal() {
  literal_ = 49;
  clear_has_literal();
}
 ::Literal5_Literal Literal5::literal() const {
  // @@protoc_insertion_point(field_get:Literal5.literal)
  return static_cast< ::Literal5_Literal >(literal_);
}
 void Literal5::set_literal(::Literal5_Literal value) {
  assert(::Literal5_Literal_IsValid(value));
  set_has_literal();
  literal_ = value;
  // @@protoc_insertion_point(field_set:Literal5.literal)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Optional4::kChildFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Optional4::Optional4()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Optional4)
}

void Optional4::InitAsDefaultInstance() {
  child_ = const_cast< ::Literal5*>(&::Literal5::default_instance());
}

Optional4::Optional4(const Optional4& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Optional4)
}

void Optional4::SharedCtor() {
  _cached_size_ = 0;
  child_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Optional4::~Optional4() {
  // @@protoc_insertion_point(destructor:Optional4)
  SharedDtor();
}

void Optional4::SharedDtor() {
  if (this != default_instance_) {
    delete child_;
  }
}

void Optional4::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Optional4::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Optional4_descriptor_;
}

const Optional4& Optional4::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

Optional4* Optional4::default_instance_ = NULL;

Optional4* Optional4::New(::google::protobuf::Arena* arena) const {
  Optional4* n = new Optional4;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Optional4::Clear() {
// @@protoc_insertion_point(message_clear_start:Optional4)
  if (has_child()) {
    if (child_ != NULL) child_->::Literal5::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Optional4::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Optional4)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Literal5 child = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_child()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Optional4)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Optional4)
  return false;
#undef DO_
}

void Optional4::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Optional4)
  // optional .Literal5 child = 1;
  if (has_child()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->child_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Optional4)
}

::google::protobuf::uint8* Optional4::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Optional4)
  // optional .Literal5 child = 1;
  if (has_child()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->child_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Optional4)
  return target;
}

int Optional4::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Optional4)
  int total_size = 0;

  // optional .Literal5 child = 1;
  if (has_child()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->child_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Optional4::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Optional4)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Optional4* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Optional4>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Optional4)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Optional4)
    MergeFrom(*source);
  }
}

void Optional4::MergeFrom(const Optional4& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Optional4)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_child()) {
      mutable_child()->::Literal5::MergeFrom(from.child());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Optional4::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Optional4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Optional4::CopyFrom(const Optional4& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Optional4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Optional4::IsInitialized() const {

  if (has_child()) {
    if (!this->child_->IsInitialized()) return false;
  }
  return true;
}

void Optional4::Swap(Optional4* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Optional4::InternalSwap(Optional4* other) {
  std::swap(child_, other->child_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Optional4::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Optional4_descriptor_;
  metadata.reflection = Optional4_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Optional4

// optional .Literal5 child = 1;
bool Optional4::has_child() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Optional4::set_has_child() {
  _has_bits_[0] |= 0x00000001u;
}
void Optional4::clear_has_child() {
  _has_bits_[0] &= ~0x00000001u;
}
void Optional4::clear_child() {
  if (child_ != NULL) child_->::Literal5::Clear();
  clear_has_child();
}
const ::Literal5& Optional4::child() const {
  // @@protoc_insertion_point(field_get:Optional4.child)
  return child_ != NULL ? *child_ : *default_instance_->child_;
}
::Literal5* Optional4::mutable_child() {
  set_has_child();
  if (child_ == NULL) {
    child_ = new ::Literal5;
  }
  // @@protoc_insertion_point(field_mutable:Optional4.child)
  return child_;
}
::Literal5* Optional4::release_child() {
  // @@protoc_insertion_point(field_release:Optional4.child)
  clear_has_child();
  ::Literal5* temp = child_;
  child_ = NULL;
  return temp;
}
void Optional4::set_allocated_child(::Literal5* child) {
  delete child_;
  child_ = child;
  if (child) {
    set_has_child();
  } else {
    clear_has_child();
  }
  // @@protoc_insertion_point(field_set_allocated:Optional4.child)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OneOrMore3::kOneFieldNumber;
const int OneOrMore3::kMoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OneOrMore3::OneOrMore3()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OneOrMore3)
}

void OneOrMore3::InitAsDefaultInstance() {
  one_ = const_cast< ::Optional4*>(&::Optional4::default_instance());
  more_ = const_cast< ::Optional4*>(&::Optional4::default_instance());
}

OneOrMore3::OneOrMore3(const OneOrMore3& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OneOrMore3)
}

void OneOrMore3::SharedCtor() {
  _cached_size_ = 0;
  one_ = NULL;
  more_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OneOrMore3::~OneOrMore3() {
  // @@protoc_insertion_point(destructor:OneOrMore3)
  SharedDtor();
}

void OneOrMore3::SharedDtor() {
  if (this != default_instance_) {
    delete one_;
    delete more_;
  }
}

void OneOrMore3::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OneOrMore3::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OneOrMore3_descriptor_;
}

const OneOrMore3& OneOrMore3::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

OneOrMore3* OneOrMore3::default_instance_ = NULL;

OneOrMore3* OneOrMore3::New(::google::protobuf::Arena* arena) const {
  OneOrMore3* n = new OneOrMore3;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OneOrMore3::Clear() {
// @@protoc_insertion_point(message_clear_start:OneOrMore3)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_one()) {
      if (one_ != NULL) one_->::Optional4::Clear();
    }
    if (has_more()) {
      if (more_ != NULL) more_->::Optional4::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool OneOrMore3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OneOrMore3)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Optional4 one = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_one()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_more;
        break;
      }

      // required .Optional4 more = 2;
      case 2: {
        if (tag == 18) {
         parse_more:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_more()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OneOrMore3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OneOrMore3)
  return false;
#undef DO_
}

void OneOrMore3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OneOrMore3)
  // required .Optional4 one = 1;
  if (has_one()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->one_, output);
  }

  // required .Optional4 more = 2;
  if (has_more()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->more_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OneOrMore3)
}

::google::protobuf::uint8* OneOrMore3::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OneOrMore3)
  // required .Optional4 one = 1;
  if (has_one()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->one_, false, target);
  }

  // required .Optional4 more = 2;
  if (has_more()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->more_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OneOrMore3)
  return target;
}

int OneOrMore3::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:OneOrMore3)
  int total_size = 0;

  if (has_one()) {
    // required .Optional4 one = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->one_);
  }

  if (has_more()) {
    // required .Optional4 more = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->more_);
  }

  return total_size;
}
int OneOrMore3::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OneOrMore3)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .Optional4 one = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->one_);

    // required .Optional4 more = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->more_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OneOrMore3::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OneOrMore3)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const OneOrMore3* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const OneOrMore3>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OneOrMore3)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OneOrMore3)
    MergeFrom(*source);
  }
}

void OneOrMore3::MergeFrom(const OneOrMore3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OneOrMore3)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_one()) {
      mutable_one()->::Optional4::MergeFrom(from.one());
    }
    if (from.has_more()) {
      mutable_more()->::Optional4::MergeFrom(from.more());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void OneOrMore3::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OneOrMore3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneOrMore3::CopyFrom(const OneOrMore3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OneOrMore3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneOrMore3::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_one()) {
    if (!this->one_->IsInitialized()) return false;
  }
  if (has_more()) {
    if (!this->more_->IsInitialized()) return false;
  }
  return true;
}

void OneOrMore3::Swap(OneOrMore3* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OneOrMore3::InternalSwap(OneOrMore3* other) {
  std::swap(one_, other->one_);
  std::swap(more_, other->more_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OneOrMore3::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OneOrMore3_descriptor_;
  metadata.reflection = OneOrMore3_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OneOrMore3

// required .Optional4 one = 1;
bool OneOrMore3::has_one() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OneOrMore3::set_has_one() {
  _has_bits_[0] |= 0x00000001u;
}
void OneOrMore3::clear_has_one() {
  _has_bits_[0] &= ~0x00000001u;
}
void OneOrMore3::clear_one() {
  if (one_ != NULL) one_->::Optional4::Clear();
  clear_has_one();
}
const ::Optional4& OneOrMore3::one() const {
  // @@protoc_insertion_point(field_get:OneOrMore3.one)
  return one_ != NULL ? *one_ : *default_instance_->one_;
}
::Optional4* OneOrMore3::mutable_one() {
  set_has_one();
  if (one_ == NULL) {
    one_ = new ::Optional4;
  }
  // @@protoc_insertion_point(field_mutable:OneOrMore3.one)
  return one_;
}
::Optional4* OneOrMore3::release_one() {
  // @@protoc_insertion_point(field_release:OneOrMore3.one)
  clear_has_one();
  ::Optional4* temp = one_;
  one_ = NULL;
  return temp;
}
void OneOrMore3::set_allocated_one(::Optional4* one) {
  delete one_;
  one_ = one;
  if (one) {
    set_has_one();
  } else {
    clear_has_one();
  }
  // @@protoc_insertion_point(field_set_allocated:OneOrMore3.one)
}

// required .Optional4 more = 2;
bool OneOrMore3::has_more() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OneOrMore3::set_has_more() {
  _has_bits_[0] |= 0x00000002u;
}
void OneOrMore3::clear_has_more() {
  _has_bits_[0] &= ~0x00000002u;
}
void OneOrMore3::clear_more() {
  if (more_ != NULL) more_->::Optional4::Clear();
  clear_has_more();
}
const ::Optional4& OneOrMore3::more() const {
  // @@protoc_insertion_point(field_get:OneOrMore3.more)
  return more_ != NULL ? *more_ : *default_instance_->more_;
}
::Optional4* OneOrMore3::mutable_more() {
  set_has_more();
  if (more_ == NULL) {
    more_ = new ::Optional4;
  }
  // @@protoc_insertion_point(field_mutable:OneOrMore3.more)
  return more_;
}
::Optional4* OneOrMore3::release_more() {
  // @@protoc_insertion_point(field_release:OneOrMore3.more)
  clear_has_more();
  ::Optional4* temp = more_;
  more_ = NULL;
  return temp;
}
void OneOrMore3::set_allocated_more(::Optional4* more) {
  delete more_;
  more_ = more;
  if (more) {
    set_has_more();
  } else {
    clear_has_more();
  }
  // @@protoc_insertion_point(field_set_allocated:OneOrMore3.more)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Optional2::kChildFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Optional2::Optional2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Optional2)
}

void Optional2::InitAsDefaultInstance() {
  child_ = const_cast< ::OneOrMore3*>(&::OneOrMore3::default_instance());
}

Optional2::Optional2(const Optional2& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Optional2)
}

void Optional2::SharedCtor() {
  _cached_size_ = 0;
  child_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Optional2::~Optional2() {
  // @@protoc_insertion_point(destructor:Optional2)
  SharedDtor();
}

void Optional2::SharedDtor() {
  if (this != default_instance_) {
    delete child_;
  }
}

void Optional2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Optional2::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Optional2_descriptor_;
}

const Optional2& Optional2::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

Optional2* Optional2::default_instance_ = NULL;

Optional2* Optional2::New(::google::protobuf::Arena* arena) const {
  Optional2* n = new Optional2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Optional2::Clear() {
// @@protoc_insertion_point(message_clear_start:Optional2)
  if (has_child()) {
    if (child_ != NULL) child_->::OneOrMore3::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Optional2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Optional2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .OneOrMore3 child = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_child()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Optional2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Optional2)
  return false;
#undef DO_
}

void Optional2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Optional2)
  // optional .OneOrMore3 child = 1;
  if (has_child()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->child_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Optional2)
}

::google::protobuf::uint8* Optional2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Optional2)
  // optional .OneOrMore3 child = 1;
  if (has_child()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->child_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Optional2)
  return target;
}

int Optional2::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Optional2)
  int total_size = 0;

  // optional .OneOrMore3 child = 1;
  if (has_child()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->child_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Optional2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Optional2)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Optional2* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Optional2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Optional2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Optional2)
    MergeFrom(*source);
  }
}

void Optional2::MergeFrom(const Optional2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Optional2)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_child()) {
      mutable_child()->::OneOrMore3::MergeFrom(from.child());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Optional2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Optional2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Optional2::CopyFrom(const Optional2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Optional2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Optional2::IsInitialized() const {

  if (has_child()) {
    if (!this->child_->IsInitialized()) return false;
  }
  return true;
}

void Optional2::Swap(Optional2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Optional2::InternalSwap(Optional2* other) {
  std::swap(child_, other->child_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Optional2::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Optional2_descriptor_;
  metadata.reflection = Optional2_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Optional2

// optional .OneOrMore3 child = 1;
bool Optional2::has_child() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Optional2::set_has_child() {
  _has_bits_[0] |= 0x00000001u;
}
void Optional2::clear_has_child() {
  _has_bits_[0] &= ~0x00000001u;
}
void Optional2::clear_child() {
  if (child_ != NULL) child_->::OneOrMore3::Clear();
  clear_has_child();
}
const ::OneOrMore3& Optional2::child() const {
  // @@protoc_insertion_point(field_get:Optional2.child)
  return child_ != NULL ? *child_ : *default_instance_->child_;
}
::OneOrMore3* Optional2::mutable_child() {
  set_has_child();
  if (child_ == NULL) {
    child_ = new ::OneOrMore3;
  }
  // @@protoc_insertion_point(field_mutable:Optional2.child)
  return child_;
}
::OneOrMore3* Optional2::release_child() {
  // @@protoc_insertion_point(field_release:Optional2.child)
  clear_has_child();
  ::OneOrMore3* temp = child_;
  child_ = NULL;
  return temp;
}
void Optional2::set_allocated_child(::OneOrMore3* child) {
  delete child_;
  child_ = child;
  if (child) {
    set_has_child();
  } else {
    clear_has_child();
  }
  // @@protoc_insertion_point(field_set_allocated:Optional2.child)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* Literal7_Literal_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Literal7_Literal_descriptor_;
}
bool Literal7_Literal_IsValid(int value) {
  switch(value) {
    case 48:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Literal7_Literal Literal7::L30;
const Literal7_Literal Literal7::Literal_MIN;
const Literal7_Literal Literal7::Literal_MAX;
const int Literal7::Literal_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Literal7::kLiteralFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Literal7::Literal7()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Literal7)
}

void Literal7::InitAsDefaultInstance() {
}

Literal7::Literal7(const Literal7& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Literal7)
}

void Literal7::SharedCtor() {
  _cached_size_ = 0;
  literal_ = 48;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Literal7::~Literal7() {
  // @@protoc_insertion_point(destructor:Literal7)
  SharedDtor();
}

void Literal7::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Literal7::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Literal7::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Literal7_descriptor_;
}

const Literal7& Literal7::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

Literal7* Literal7::default_instance_ = NULL;

Literal7* Literal7::New(::google::protobuf::Arena* arena) const {
  Literal7* n = new Literal7;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Literal7::Clear() {
// @@protoc_insertion_point(message_clear_start:Literal7)
  literal_ = 48;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Literal7::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Literal7)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Literal7.Literal literal = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Literal7_Literal_IsValid(value)) {
            set_literal(static_cast< ::Literal7_Literal >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Literal7)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Literal7)
  return false;
#undef DO_
}

void Literal7::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Literal7)
  // required .Literal7.Literal literal = 1;
  if (has_literal()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->literal(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Literal7)
}

::google::protobuf::uint8* Literal7::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Literal7)
  // required .Literal7.Literal literal = 1;
  if (has_literal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->literal(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Literal7)
  return target;
}

int Literal7::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Literal7)
  int total_size = 0;

  // required .Literal7.Literal literal = 1;
  if (has_literal()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->literal());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Literal7::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Literal7)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Literal7* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Literal7>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Literal7)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Literal7)
    MergeFrom(*source);
  }
}

void Literal7::MergeFrom(const Literal7& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Literal7)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_literal()) {
      set_literal(from.literal());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Literal7::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Literal7)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Literal7::CopyFrom(const Literal7& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Literal7)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Literal7::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Literal7::Swap(Literal7* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Literal7::InternalSwap(Literal7* other) {
  std::swap(literal_, other->literal_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Literal7::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Literal7_descriptor_;
  metadata.reflection = Literal7_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Literal7

// required .Literal7.Literal literal = 1;
bool Literal7::has_literal() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Literal7::set_has_literal() {
  _has_bits_[0] |= 0x00000001u;
}
void Literal7::clear_has_literal() {
  _has_bits_[0] &= ~0x00000001u;
}
void Literal7::clear_literal() {
  literal_ = 48;
  clear_has_literal();
}
 ::Literal7_Literal Literal7::literal() const {
  // @@protoc_insertion_point(field_get:Literal7.literal)
  return static_cast< ::Literal7_Literal >(literal_);
}
 void Literal7::set_literal(::Literal7_Literal value) {
  assert(::Literal7_Literal_IsValid(value));
  set_has_literal();
  literal_ = value;
  // @@protoc_insertion_point(field_set:Literal7.literal)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* Literal9_Literal_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Literal9_Literal_descriptor_;
}
bool Literal9_Literal_IsValid(int value) {
  switch(value) {
    case 48:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Literal9_Literal Literal9::L30;
const Literal9_Literal Literal9::Literal_MIN;
const Literal9_Literal Literal9::Literal_MAX;
const int Literal9::Literal_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Literal9::kLiteralFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Literal9::Literal9()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Literal9)
}

void Literal9::InitAsDefaultInstance() {
}

Literal9::Literal9(const Literal9& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Literal9)
}

void Literal9::SharedCtor() {
  _cached_size_ = 0;
  literal_ = 48;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Literal9::~Literal9() {
  // @@protoc_insertion_point(destructor:Literal9)
  SharedDtor();
}

void Literal9::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Literal9::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Literal9::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Literal9_descriptor_;
}

const Literal9& Literal9::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

Literal9* Literal9::default_instance_ = NULL;

Literal9* Literal9::New(::google::protobuf::Arena* arena) const {
  Literal9* n = new Literal9;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Literal9::Clear() {
// @@protoc_insertion_point(message_clear_start:Literal9)
  literal_ = 48;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Literal9::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Literal9)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Literal9.Literal literal = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Literal9_Literal_IsValid(value)) {
            set_literal(static_cast< ::Literal9_Literal >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Literal9)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Literal9)
  return false;
#undef DO_
}

void Literal9::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Literal9)
  // required .Literal9.Literal literal = 1;
  if (has_literal()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->literal(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Literal9)
}

::google::protobuf::uint8* Literal9::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Literal9)
  // required .Literal9.Literal literal = 1;
  if (has_literal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->literal(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Literal9)
  return target;
}

int Literal9::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Literal9)
  int total_size = 0;

  // required .Literal9.Literal literal = 1;
  if (has_literal()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->literal());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Literal9::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Literal9)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Literal9* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Literal9>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Literal9)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Literal9)
    MergeFrom(*source);
  }
}

void Literal9::MergeFrom(const Literal9& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Literal9)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_literal()) {
      set_literal(from.literal());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Literal9::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Literal9)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Literal9::CopyFrom(const Literal9& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Literal9)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Literal9::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Literal9::Swap(Literal9* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Literal9::InternalSwap(Literal9* other) {
  std::swap(literal_, other->literal_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Literal9::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Literal9_descriptor_;
  metadata.reflection = Literal9_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Literal9

// required .Literal9.Literal literal = 1;
bool Literal9::has_literal() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Literal9::set_has_literal() {
  _has_bits_[0] |= 0x00000001u;
}
void Literal9::clear_has_literal() {
  _has_bits_[0] &= ~0x00000001u;
}
void Literal9::clear_literal() {
  literal_ = 48;
  clear_has_literal();
}
 ::Literal9_Literal Literal9::literal() const {
  // @@protoc_insertion_point(field_get:Literal9.literal)
  return static_cast< ::Literal9_Literal >(literal_);
}
 void Literal9::set_literal(::Literal9_Literal value) {
  assert(::Literal9_Literal_IsValid(value));
  set_has_literal();
  literal_ = value;
  // @@protoc_insertion_point(field_set:Literal9.literal)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* RESet11_Set_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RESet11_Set_descriptor_;
}
bool RESet11_Set_IsValid(int value) {
  switch(value) {
    case 48:
    case 49:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RESet11_Set RESet11::L30;
const RESet11_Set RESet11::L31;
const RESet11_Set RESet11::Set_MIN;
const RESet11_Set RESet11::Set_MAX;
const int RESet11::Set_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RESet11::kSetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RESet11::RESet11()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RESet11)
}

void RESet11::InitAsDefaultInstance() {
}

RESet11::RESet11(const RESet11& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RESet11)
}

void RESet11::SharedCtor() {
  _cached_size_ = 0;
  set_ = 48;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RESet11::~RESet11() {
  // @@protoc_insertion_point(destructor:RESet11)
  SharedDtor();
}

void RESet11::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RESet11::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RESet11::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RESet11_descriptor_;
}

const RESet11& RESet11::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

RESet11* RESet11::default_instance_ = NULL;

RESet11* RESet11::New(::google::protobuf::Arena* arena) const {
  RESet11* n = new RESet11;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RESet11::Clear() {
// @@protoc_insertion_point(message_clear_start:RESet11)
  set_ = 48;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RESet11::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RESet11)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .RESet11.Set set = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::RESet11_Set_IsValid(value)) {
            set_set(static_cast< ::RESet11_Set >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RESet11)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RESet11)
  return false;
#undef DO_
}

void RESet11::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RESet11)
  // required .RESet11.Set set = 1;
  if (has_set()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->set(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RESet11)
}

::google::protobuf::uint8* RESet11::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RESet11)
  // required .RESet11.Set set = 1;
  if (has_set()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->set(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RESet11)
  return target;
}

int RESet11::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:RESet11)
  int total_size = 0;

  // required .RESet11.Set set = 1;
  if (has_set()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->set());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RESet11::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RESet11)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RESet11* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RESet11>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RESet11)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RESet11)
    MergeFrom(*source);
  }
}

void RESet11::MergeFrom(const RESet11& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RESet11)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_set()) {
      set_set(from.set());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RESet11::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RESet11)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RESet11::CopyFrom(const RESet11& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RESet11)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RESet11::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RESet11::Swap(RESet11* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RESet11::InternalSwap(RESet11* other) {
  std::swap(set_, other->set_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RESet11::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RESet11_descriptor_;
  metadata.reflection = RESet11_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RESet11

// required .RESet11.Set set = 1;
bool RESet11::has_set() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RESet11::set_has_set() {
  _has_bits_[0] |= 0x00000001u;
}
void RESet11::clear_has_set() {
  _has_bits_[0] &= ~0x00000001u;
}
void RESet11::clear_set() {
  set_ = 48;
  clear_has_set();
}
 ::RESet11_Set RESet11::set() const {
  // @@protoc_insertion_point(field_get:RESet11.set)
  return static_cast< ::RESet11_Set >(set_);
}
 void RESet11::set_set(::RESet11_Set value) {
  assert(::RESet11_Set_IsValid(value));
  set_has_set();
  set_ = value;
  // @@protoc_insertion_point(field_set:RESet11.set)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Star10::kChildFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Star10::Star10()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Star10)
}

void Star10::InitAsDefaultInstance() {
}

Star10::Star10(const Star10& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Star10)
}

void Star10::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Star10::~Star10() {
  // @@protoc_insertion_point(destructor:Star10)
  SharedDtor();
}

void Star10::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Star10::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Star10::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Star10_descriptor_;
}

const Star10& Star10::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

Star10* Star10::default_instance_ = NULL;

Star10* Star10::New(::google::protobuf::Arena* arena) const {
  Star10* n = new Star10;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Star10::Clear() {
// @@protoc_insertion_point(message_clear_start:Star10)
  child_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Star10::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Star10)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .RESet11 child = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_child:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_child()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_child;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Star10)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Star10)
  return false;
#undef DO_
}

void Star10::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Star10)
  // repeated .RESet11 child = 1;
  for (unsigned int i = 0, n = this->child_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->child(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Star10)
}

::google::protobuf::uint8* Star10::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Star10)
  // repeated .RESet11 child = 1;
  for (unsigned int i = 0, n = this->child_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->child(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Star10)
  return target;
}

int Star10::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Star10)
  int total_size = 0;

  // repeated .RESet11 child = 1;
  total_size += 1 * this->child_size();
  for (int i = 0; i < this->child_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->child(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Star10::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Star10)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Star10* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Star10>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Star10)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Star10)
    MergeFrom(*source);
  }
}

void Star10::MergeFrom(const Star10& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Star10)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  child_.MergeFrom(from.child_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Star10::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Star10)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Star10::CopyFrom(const Star10& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Star10)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Star10::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->child())) return false;
  return true;
}

void Star10::Swap(Star10* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Star10::InternalSwap(Star10* other) {
  child_.UnsafeArenaSwap(&other->child_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Star10::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Star10_descriptor_;
  metadata.reflection = Star10_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Star10

// repeated .RESet11 child = 1;
int Star10::child_size() const {
  return child_.size();
}
void Star10::clear_child() {
  child_.Clear();
}
const ::RESet11& Star10::child(int index) const {
  // @@protoc_insertion_point(field_get:Star10.child)
  return child_.Get(index);
}
::RESet11* Star10::mutable_child(int index) {
  // @@protoc_insertion_point(field_mutable:Star10.child)
  return child_.Mutable(index);
}
::RESet11* Star10::add_child() {
  // @@protoc_insertion_point(field_add:Star10.child)
  return child_.Add();
}
::google::protobuf::RepeatedPtrField< ::RESet11 >*
Star10::mutable_child() {
  // @@protoc_insertion_point(field_mutable_list:Star10.child)
  return &child_;
}
const ::google::protobuf::RepeatedPtrField< ::RESet11 >&
Star10::child() const {
  // @@protoc_insertion_point(field_list:Star10.child)
  return child_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Then8::kLiteral9FieldNumber;
const int Then8::kStar10FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Then8::Then8()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Then8)
}

void Then8::InitAsDefaultInstance() {
  literal9_ = const_cast< ::Literal9*>(&::Literal9::default_instance());
  star10_ = const_cast< ::Star10*>(&::Star10::default_instance());
}

Then8::Then8(const Then8& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Then8)
}

void Then8::SharedCtor() {
  _cached_size_ = 0;
  literal9_ = NULL;
  star10_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Then8::~Then8() {
  // @@protoc_insertion_point(destructor:Then8)
  SharedDtor();
}

void Then8::SharedDtor() {
  if (this != default_instance_) {
    delete literal9_;
    delete star10_;
  }
}

void Then8::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Then8::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Then8_descriptor_;
}

const Then8& Then8::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

Then8* Then8::default_instance_ = NULL;

Then8* Then8::New(::google::protobuf::Arena* arena) const {
  Then8* n = new Then8;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Then8::Clear() {
// @@protoc_insertion_point(message_clear_start:Then8)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_literal9()) {
      if (literal9_ != NULL) literal9_->::Literal9::Clear();
    }
    if (has_star10()) {
      if (star10_ != NULL) star10_->::Star10::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Then8::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Then8)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Literal9 literal9 = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_literal9()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_star10;
        break;
      }

      // required .Star10 star10 = 2;
      case 2: {
        if (tag == 18) {
         parse_star10:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_star10()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Then8)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Then8)
  return false;
#undef DO_
}

void Then8::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Then8)
  // required .Literal9 literal9 = 1;
  if (has_literal9()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->literal9_, output);
  }

  // required .Star10 star10 = 2;
  if (has_star10()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->star10_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Then8)
}

::google::protobuf::uint8* Then8::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Then8)
  // required .Literal9 literal9 = 1;
  if (has_literal9()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->literal9_, false, target);
  }

  // required .Star10 star10 = 2;
  if (has_star10()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->star10_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Then8)
  return target;
}

int Then8::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Then8)
  int total_size = 0;

  if (has_literal9()) {
    // required .Literal9 literal9 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->literal9_);
  }

  if (has_star10()) {
    // required .Star10 star10 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->star10_);
  }

  return total_size;
}
int Then8::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Then8)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .Literal9 literal9 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->literal9_);

    // required .Star10 star10 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->star10_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Then8::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Then8)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Then8* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Then8>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Then8)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Then8)
    MergeFrom(*source);
  }
}

void Then8::MergeFrom(const Then8& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Then8)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_literal9()) {
      mutable_literal9()->::Literal9::MergeFrom(from.literal9());
    }
    if (from.has_star10()) {
      mutable_star10()->::Star10::MergeFrom(from.star10());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Then8::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Then8)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Then8::CopyFrom(const Then8& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Then8)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Then8::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_literal9()) {
    if (!this->literal9_->IsInitialized()) return false;
  }
  if (has_star10()) {
    if (!this->star10_->IsInitialized()) return false;
  }
  return true;
}

void Then8::Swap(Then8* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Then8::InternalSwap(Then8* other) {
  std::swap(literal9_, other->literal9_);
  std::swap(star10_, other->star10_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Then8::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Then8_descriptor_;
  metadata.reflection = Then8_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Then8

// required .Literal9 literal9 = 1;
bool Then8::has_literal9() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Then8::set_has_literal9() {
  _has_bits_[0] |= 0x00000001u;
}
void Then8::clear_has_literal9() {
  _has_bits_[0] &= ~0x00000001u;
}
void Then8::clear_literal9() {
  if (literal9_ != NULL) literal9_->::Literal9::Clear();
  clear_has_literal9();
}
const ::Literal9& Then8::literal9() const {
  // @@protoc_insertion_point(field_get:Then8.literal9)
  return literal9_ != NULL ? *literal9_ : *default_instance_->literal9_;
}
::Literal9* Then8::mutable_literal9() {
  set_has_literal9();
  if (literal9_ == NULL) {
    literal9_ = new ::Literal9;
  }
  // @@protoc_insertion_point(field_mutable:Then8.literal9)
  return literal9_;
}
::Literal9* Then8::release_literal9() {
  // @@protoc_insertion_point(field_release:Then8.literal9)
  clear_has_literal9();
  ::Literal9* temp = literal9_;
  literal9_ = NULL;
  return temp;
}
void Then8::set_allocated_literal9(::Literal9* literal9) {
  delete literal9_;
  literal9_ = literal9;
  if (literal9) {
    set_has_literal9();
  } else {
    clear_has_literal9();
  }
  // @@protoc_insertion_point(field_set_allocated:Then8.literal9)
}

// required .Star10 star10 = 2;
bool Then8::has_star10() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Then8::set_has_star10() {
  _has_bits_[0] |= 0x00000002u;
}
void Then8::clear_has_star10() {
  _has_bits_[0] &= ~0x00000002u;
}
void Then8::clear_star10() {
  if (star10_ != NULL) star10_->::Star10::Clear();
  clear_has_star10();
}
const ::Star10& Then8::star10() const {
  // @@protoc_insertion_point(field_get:Then8.star10)
  return star10_ != NULL ? *star10_ : *default_instance_->star10_;
}
::Star10* Then8::mutable_star10() {
  set_has_star10();
  if (star10_ == NULL) {
    star10_ = new ::Star10;
  }
  // @@protoc_insertion_point(field_mutable:Then8.star10)
  return star10_;
}
::Star10* Then8::release_star10() {
  // @@protoc_insertion_point(field_release:Then8.star10)
  clear_has_star10();
  ::Star10* temp = star10_;
  star10_ = NULL;
  return temp;
}
void Then8::set_allocated_star10(::Star10* star10) {
  delete star10_;
  star10_ = star10;
  if (star10) {
    set_has_star10();
  } else {
    clear_has_star10();
  }
  // @@protoc_insertion_point(field_set_allocated:Then8.star10)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Or6::kLiteral7FieldNumber;
const int Or6::kThen8FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Or6::Or6()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Or6)
}

void Or6::InitAsDefaultInstance() {
  Or6_default_oneof_instance_->literal7_ = const_cast< ::Literal7*>(&::Literal7::default_instance());
  Or6_default_oneof_instance_->then8_ = const_cast< ::Then8*>(&::Then8::default_instance());
}

Or6::Or6(const Or6& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Or6)
}

void Or6::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  clear_has_T();
}

Or6::~Or6() {
  // @@protoc_insertion_point(destructor:Or6)
  SharedDtor();
}

void Or6::SharedDtor() {
  if (has_T()) {
    clear_T();
  }
  if (this != default_instance_) {
  }
}

void Or6::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Or6::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Or6_descriptor_;
}

const Or6& Or6::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

Or6* Or6::default_instance_ = NULL;

Or6* Or6::New(::google::protobuf::Arena* arena) const {
  Or6* n = new Or6;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Or6::clear_T() {
// @@protoc_insertion_point(one_of_clear_start:Or6)
  switch(T_case()) {
    case kLiteral7: {
      delete T_.literal7_;
      break;
    }
    case kThen8: {
      delete T_.then8_;
      break;
    }
    case T_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = T_NOT_SET;
}


void Or6::Clear() {
// @@protoc_insertion_point(message_clear_start:Or6)
  clear_T();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Or6::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Or6)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Literal7 literal7 = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_literal7()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_then8;
        break;
      }

      // optional .Then8 then8 = 2;
      case 2: {
        if (tag == 18) {
         parse_then8:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_then8()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Or6)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Or6)
  return false;
#undef DO_
}

void Or6::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Or6)
  // optional .Literal7 literal7 = 1;
  if (has_literal7()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *T_.literal7_, output);
  }

  // optional .Then8 then8 = 2;
  if (has_then8()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *T_.then8_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Or6)
}

::google::protobuf::uint8* Or6::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Or6)
  // optional .Literal7 literal7 = 1;
  if (has_literal7()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *T_.literal7_, false, target);
  }

  // optional .Then8 then8 = 2;
  if (has_then8()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *T_.then8_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Or6)
  return target;
}

int Or6::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Or6)
  int total_size = 0;

  switch (T_case()) {
    // optional .Literal7 literal7 = 1;
    case kLiteral7: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *T_.literal7_);
      break;
    }
    // optional .Then8 then8 = 2;
    case kThen8: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *T_.then8_);
      break;
    }
    case T_NOT_SET: {
      break;
    }
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Or6::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Or6)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Or6* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Or6>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Or6)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Or6)
    MergeFrom(*source);
  }
}

void Or6::MergeFrom(const Or6& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Or6)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  switch (from.T_case()) {
    case kLiteral7: {
      mutable_literal7()->::Literal7::MergeFrom(from.literal7());
      break;
    }
    case kThen8: {
      mutable_then8()->::Then8::MergeFrom(from.then8());
      break;
    }
    case T_NOT_SET: {
      break;
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Or6::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Or6)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Or6::CopyFrom(const Or6& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Or6)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Or6::IsInitialized() const {

  if (has_literal7()) {
    if (!this->literal7().IsInitialized()) return false;
  }
  if (has_then8()) {
    if (!this->then8().IsInitialized()) return false;
  }
  return true;
}

void Or6::Swap(Or6* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Or6::InternalSwap(Or6* other) {
  std::swap(T_, other->T_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Or6::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Or6_descriptor_;
  metadata.reflection = Or6_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Or6

// optional .Literal7 literal7 = 1;
bool Or6::has_literal7() const {
  return T_case() == kLiteral7;
}
void Or6::set_has_literal7() {
  _oneof_case_[0] = kLiteral7;
}
void Or6::clear_literal7() {
  if (has_literal7()) {
    delete T_.literal7_;
    clear_has_T();
  }
}
 const ::Literal7& Or6::literal7() const {
  // @@protoc_insertion_point(field_get:Or6.literal7)
  return has_literal7()
      ? *T_.literal7_
      : ::Literal7::default_instance();
}
::Literal7* Or6::mutable_literal7() {
  if (!has_literal7()) {
    clear_T();
    set_has_literal7();
    T_.literal7_ = new ::Literal7;
  }
  // @@protoc_insertion_point(field_mutable:Or6.literal7)
  return T_.literal7_;
}
::Literal7* Or6::release_literal7() {
  // @@protoc_insertion_point(field_release:Or6.literal7)
  if (has_literal7()) {
    clear_has_T();
    ::Literal7* temp = T_.literal7_;
    T_.literal7_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Or6::set_allocated_literal7(::Literal7* literal7) {
  clear_T();
  if (literal7) {
    set_has_literal7();
    T_.literal7_ = literal7;
  }
  // @@protoc_insertion_point(field_set_allocated:Or6.literal7)
}

// optional .Then8 then8 = 2;
bool Or6::has_then8() const {
  return T_case() == kThen8;
}
void Or6::set_has_then8() {
  _oneof_case_[0] = kThen8;
}
void Or6::clear_then8() {
  if (has_then8()) {
    delete T_.then8_;
    clear_has_T();
  }
}
 const ::Then8& Or6::then8() const {
  // @@protoc_insertion_point(field_get:Or6.then8)
  return has_then8()
      ? *T_.then8_
      : ::Then8::default_instance();
}
::Then8* Or6::mutable_then8() {
  if (!has_then8()) {
    clear_T();
    set_has_then8();
    T_.then8_ = new ::Then8;
  }
  // @@protoc_insertion_point(field_mutable:Or6.then8)
  return T_.then8_;
}
::Then8* Or6::release_then8() {
  // @@protoc_insertion_point(field_release:Or6.then8)
  if (has_then8()) {
    clear_has_T();
    ::Then8* temp = T_.then8_;
    T_.then8_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Or6::set_allocated_then8(::Then8* then8) {
  clear_T();
  if (then8) {
    set_has_then8();
    T_.then8_ = then8;
  }
  // @@protoc_insertion_point(field_set_allocated:Or6.then8)
}

bool Or6::has_T() const {
  return T_case() != T_NOT_SET;
}
void Or6::clear_has_T() {
  _oneof_case_[0] = T_NOT_SET;
}
Or6::TCase Or6::T_case() const {
  return Or6::TCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Then1::kOptional2FieldNumber;
const int Then1::kOr6FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Then1::Then1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Then1)
}

void Then1::InitAsDefaultInstance() {
  optional2_ = const_cast< ::Optional2*>(&::Optional2::default_instance());
  or6_ = const_cast< ::Or6*>(&::Or6::default_instance());
}

Then1::Then1(const Then1& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Then1)
}

void Then1::SharedCtor() {
  _cached_size_ = 0;
  optional2_ = NULL;
  or6_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Then1::~Then1() {
  // @@protoc_insertion_point(destructor:Then1)
  SharedDtor();
}

void Then1::SharedDtor() {
  if (this != default_instance_) {
    delete optional2_;
    delete or6_;
  }
}

void Then1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Then1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Then1_descriptor_;
}

const Then1& Then1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

Then1* Then1::default_instance_ = NULL;

Then1* Then1::New(::google::protobuf::Arena* arena) const {
  Then1* n = new Then1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Then1::Clear() {
// @@protoc_insertion_point(message_clear_start:Then1)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_optional2()) {
      if (optional2_ != NULL) optional2_->::Optional2::Clear();
    }
    if (has_or6()) {
      if (or6_ != NULL) or6_->::Or6::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Then1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Then1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Optional2 optional2 = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_optional2()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_or6;
        break;
      }

      // required .Or6 or6 = 2;
      case 2: {
        if (tag == 18) {
         parse_or6:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_or6()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Then1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Then1)
  return false;
#undef DO_
}

void Then1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Then1)
  // required .Optional2 optional2 = 1;
  if (has_optional2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->optional2_, output);
  }

  // required .Or6 or6 = 2;
  if (has_or6()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->or6_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Then1)
}

::google::protobuf::uint8* Then1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Then1)
  // required .Optional2 optional2 = 1;
  if (has_optional2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->optional2_, false, target);
  }

  // required .Or6 or6 = 2;
  if (has_or6()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->or6_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Then1)
  return target;
}

int Then1::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Then1)
  int total_size = 0;

  if (has_optional2()) {
    // required .Optional2 optional2 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->optional2_);
  }

  if (has_or6()) {
    // required .Or6 or6 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->or6_);
  }

  return total_size;
}
int Then1::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Then1)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .Optional2 optional2 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->optional2_);

    // required .Or6 or6 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->or6_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Then1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Then1)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Then1* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Then1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Then1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Then1)
    MergeFrom(*source);
  }
}

void Then1::MergeFrom(const Then1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Then1)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_optional2()) {
      mutable_optional2()->::Optional2::MergeFrom(from.optional2());
    }
    if (from.has_or6()) {
      mutable_or6()->::Or6::MergeFrom(from.or6());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Then1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Then1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Then1::CopyFrom(const Then1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Then1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Then1::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_optional2()) {
    if (!this->optional2_->IsInitialized()) return false;
  }
  if (has_or6()) {
    if (!this->or6_->IsInitialized()) return false;
  }
  return true;
}

void Then1::Swap(Then1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Then1::InternalSwap(Then1* other) {
  std::swap(optional2_, other->optional2_);
  std::swap(or6_, other->or6_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Then1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Then1_descriptor_;
  metadata.reflection = Then1_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Then1

// required .Optional2 optional2 = 1;
bool Then1::has_optional2() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Then1::set_has_optional2() {
  _has_bits_[0] |= 0x00000001u;
}
void Then1::clear_has_optional2() {
  _has_bits_[0] &= ~0x00000001u;
}
void Then1::clear_optional2() {
  if (optional2_ != NULL) optional2_->::Optional2::Clear();
  clear_has_optional2();
}
const ::Optional2& Then1::optional2() const {
  // @@protoc_insertion_point(field_get:Then1.optional2)
  return optional2_ != NULL ? *optional2_ : *default_instance_->optional2_;
}
::Optional2* Then1::mutable_optional2() {
  set_has_optional2();
  if (optional2_ == NULL) {
    optional2_ = new ::Optional2;
  }
  // @@protoc_insertion_point(field_mutable:Then1.optional2)
  return optional2_;
}
::Optional2* Then1::release_optional2() {
  // @@protoc_insertion_point(field_release:Then1.optional2)
  clear_has_optional2();
  ::Optional2* temp = optional2_;
  optional2_ = NULL;
  return temp;
}
void Then1::set_allocated_optional2(::Optional2* optional2) {
  delete optional2_;
  optional2_ = optional2;
  if (optional2) {
    set_has_optional2();
  } else {
    clear_has_optional2();
  }
  // @@protoc_insertion_point(field_set_allocated:Then1.optional2)
}

// required .Or6 or6 = 2;
bool Then1::has_or6() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Then1::set_has_or6() {
  _has_bits_[0] |= 0x00000002u;
}
void Then1::clear_has_or6() {
  _has_bits_[0] &= ~0x00000002u;
}
void Then1::clear_or6() {
  if (or6_ != NULL) or6_->::Or6::Clear();
  clear_has_or6();
}
const ::Or6& Then1::or6() const {
  // @@protoc_insertion_point(field_get:Then1.or6)
  return or6_ != NULL ? *or6_ : *default_instance_->or6_;
}
::Or6* Then1::mutable_or6() {
  set_has_or6();
  if (or6_ == NULL) {
    or6_ = new ::Or6;
  }
  // @@protoc_insertion_point(field_mutable:Then1.or6)
  return or6_;
}
::Or6* Then1::release_or6() {
  // @@protoc_insertion_point(field_release:Then1.or6)
  clear_has_or6();
  ::Or6* temp = or6_;
  or6_ = NULL;
  return temp;
}
void Then1::set_allocated_or6(::Or6* or6) {
  delete or6_;
  or6_ = or6;
  if (or6) {
    set_has_or6();
  } else {
    clear_has_or6();
  }
  // @@protoc_insertion_point(field_set_allocated:Then1.or6)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RootHelper::kThen1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RootHelper::RootHelper()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RootHelper)
}

void RootHelper::InitAsDefaultInstance() {
  RootHelper_default_oneof_instance_->then1_ = const_cast< ::Then1*>(&::Then1::default_instance());
}

RootHelper::RootHelper(const RootHelper& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RootHelper)
}

void RootHelper::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  clear_has_T();
}

RootHelper::~RootHelper() {
  // @@protoc_insertion_point(destructor:RootHelper)
  SharedDtor();
}

void RootHelper::SharedDtor() {
  if (has_T()) {
    clear_T();
  }
  if (this != default_instance_) {
  }
}

void RootHelper::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RootHelper::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RootHelper_descriptor_;
}

const RootHelper& RootHelper::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

RootHelper* RootHelper::default_instance_ = NULL;

RootHelper* RootHelper::New(::google::protobuf::Arena* arena) const {
  RootHelper* n = new RootHelper;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RootHelper::clear_T() {
// @@protoc_insertion_point(one_of_clear_start:RootHelper)
  switch(T_case()) {
    case kThen1: {
      delete T_.then1_;
      break;
    }
    case T_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = T_NOT_SET;
}


void RootHelper::Clear() {
// @@protoc_insertion_point(message_clear_start:RootHelper)
  clear_T();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RootHelper::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RootHelper)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Then1 then1 = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_then1()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RootHelper)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RootHelper)
  return false;
#undef DO_
}

void RootHelper::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RootHelper)
  // optional .Then1 then1 = 1;
  if (has_then1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *T_.then1_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RootHelper)
}

::google::protobuf::uint8* RootHelper::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RootHelper)
  // optional .Then1 then1 = 1;
  if (has_then1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *T_.then1_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RootHelper)
  return target;
}

int RootHelper::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:RootHelper)
  int total_size = 0;

  switch (T_case()) {
    // optional .Then1 then1 = 1;
    case kThen1: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *T_.then1_);
      break;
    }
    case T_NOT_SET: {
      break;
    }
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RootHelper::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RootHelper)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RootHelper* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RootHelper>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RootHelper)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RootHelper)
    MergeFrom(*source);
  }
}

void RootHelper::MergeFrom(const RootHelper& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RootHelper)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  switch (from.T_case()) {
    case kThen1: {
      mutable_then1()->::Then1::MergeFrom(from.then1());
      break;
    }
    case T_NOT_SET: {
      break;
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RootHelper::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RootHelper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RootHelper::CopyFrom(const RootHelper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RootHelper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RootHelper::IsInitialized() const {

  if (has_then1()) {
    if (!this->then1().IsInitialized()) return false;
  }
  return true;
}

void RootHelper::Swap(RootHelper* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RootHelper::InternalSwap(RootHelper* other) {
  std::swap(T_, other->T_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RootHelper::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RootHelper_descriptor_;
  metadata.reflection = RootHelper_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RootHelper

// optional .Then1 then1 = 1;
bool RootHelper::has_then1() const {
  return T_case() == kThen1;
}
void RootHelper::set_has_then1() {
  _oneof_case_[0] = kThen1;
}
void RootHelper::clear_then1() {
  if (has_then1()) {
    delete T_.then1_;
    clear_has_T();
  }
}
 const ::Then1& RootHelper::then1() const {
  // @@protoc_insertion_point(field_get:RootHelper.then1)
  return has_then1()
      ? *T_.then1_
      : ::Then1::default_instance();
}
::Then1* RootHelper::mutable_then1() {
  if (!has_then1()) {
    clear_T();
    set_has_then1();
    T_.then1_ = new ::Then1;
  }
  // @@protoc_insertion_point(field_mutable:RootHelper.then1)
  return T_.then1_;
}
::Then1* RootHelper::release_then1() {
  // @@protoc_insertion_point(field_release:RootHelper.then1)
  if (has_then1()) {
    clear_has_T();
    ::Then1* temp = T_.then1_;
    T_.then1_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void RootHelper::set_allocated_then1(::Then1* then1) {
  clear_T();
  if (then1) {
    set_has_then1();
    T_.then1_ = then1;
  }
  // @@protoc_insertion_point(field_set_allocated:RootHelper.then1)
}

bool RootHelper::has_T() const {
  return T_case() != T_NOT_SET;
}
void RootHelper::clear_has_T() {
  _oneof_case_[0] = T_NOT_SET;
}
RootHelper::TCase RootHelper::T_case() const {
  return RootHelper::TCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Root::kRhFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Root::Root()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Root)
}

void Root::InitAsDefaultInstance() {
}

Root::Root(const Root& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Root)
}

void Root::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Root::~Root() {
  // @@protoc_insertion_point(destructor:Root)
  SharedDtor();
}

void Root::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Root::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Root::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Root_descriptor_;
}

const Root& Root::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

Root* Root::default_instance_ = NULL;

Root* Root::New(::google::protobuf::Arena* arena) const {
  Root* n = new Root;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Root::Clear() {
// @@protoc_insertion_point(message_clear_start:Root)
  rh_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Root::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Root)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .RootHelper rh = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_rh:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_rh()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_rh;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Root)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Root)
  return false;
#undef DO_
}

void Root::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Root)
  // repeated .RootHelper rh = 1;
  for (unsigned int i = 0, n = this->rh_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rh(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Root)
}

::google::protobuf::uint8* Root::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Root)
  // repeated .RootHelper rh = 1;
  for (unsigned int i = 0, n = this->rh_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->rh(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Root)
  return target;
}

int Root::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Root)
  int total_size = 0;

  // repeated .RootHelper rh = 1;
  total_size += 1 * this->rh_size();
  for (int i = 0; i < this->rh_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rh(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Root::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Root)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Root* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Root>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Root)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Root)
    MergeFrom(*source);
  }
}

void Root::MergeFrom(const Root& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Root)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  rh_.MergeFrom(from.rh_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Root::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Root)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Root::CopyFrom(const Root& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Root)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Root::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->rh())) return false;
  return true;
}

void Root::Swap(Root* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Root::InternalSwap(Root* other) {
  rh_.UnsafeArenaSwap(&other->rh_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Root::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Root_descriptor_;
  metadata.reflection = Root_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Root

// repeated .RootHelper rh = 1;
int Root::rh_size() const {
  return rh_.size();
}
void Root::clear_rh() {
  rh_.Clear();
}
const ::RootHelper& Root::rh(int index) const {
  // @@protoc_insertion_point(field_get:Root.rh)
  return rh_.Get(index);
}
::RootHelper* Root::mutable_rh(int index) {
  // @@protoc_insertion_point(field_mutable:Root.rh)
  return rh_.Mutable(index);
}
::RootHelper* Root::add_rh() {
  // @@protoc_insertion_point(field_add:Root.rh)
  return rh_.Add();
}
::google::protobuf::RepeatedPtrField< ::RootHelper >*
Root::mutable_rh() {
  // @@protoc_insertion_point(field_mutable_list:Root.rh)
  return &rh_;
}
const ::google::protobuf::RepeatedPtrField< ::RootHelper >&
Root::rh() const {
  // @@protoc_insertion_point(field_list:Root.rh)
  return rh_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
